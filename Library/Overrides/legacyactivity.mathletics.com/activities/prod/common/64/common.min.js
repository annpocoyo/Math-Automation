var MOBILE, WEB_BROWSER, FLEX = (!function(e) {
    "use strict";
    var t = function(o) {
        var e, t = {
            pattern: [38, 38, 40, 40, 37, 39, 37, 39, 66, 65],
            patternTouch: ["↑", "↑", "↓", "↓", "←", "→", "→", "←", "tap", "tap"],
            onInput: null,
            onCorrectInput: null,
            onComboBreak: null,
            onSuccess: null
        };
        for (e in t)
            t.hasOwnProperty(e) && !o.hasOwnProperty(e) && (o[e] = t[e]);
        var i = {
            addEvent: function(e, t, n, r) {
                e.addEventListener ? e.addEventListener(t, n, !1) : e.attachEvent && (e["e" + t + n] = n,
                e[t + n] = function() {
                    e["e" + t + n](window.event, r)
                }
                ,
                e.attachEvent("on" + t, e[t + n]))
            },
            pattern: o.pattern,
            orig_pattern: o.pattern,
            load: function() {
                this.addEvent(document, "keydown", function(e, t) {
                    t && (i = t);
                    t = (e || event).keyCode;
                    return "function" == typeof o.onInput && o.onInput(t, i.pattern, i.orig_pattern),
                    t === i.pattern[0] ? (i.pattern = i.pattern.slice(1, i.pattern.length),
                    "function" == typeof o.onCorrectInput && o.onCorrectInput(t, i.pattern, i.orig_pattern)) : ("function" == typeof o.onComboBreak && o.onComboBreak(t, i.pattern, i.orig_pattern),
                    i.pattern = i.orig_pattern),
                    0 !== i.pattern.length || (i.pattern = i.orig_pattern,
                    i.success(),
                    e.preventDefault(),
                    !1)
                }, this),
                this.touch.load()
            },
            success: function() {
                var e = typeof o.onSuccess;
                "function" == e ? o.onSuccess() : "string" == e && (window.location = o.onSuccess)
            },
            touch: {
                touchState: {
                    startX: 0,
                    startY: 0,
                    stopX: 0,
                    stopY: 0,
                    tap: !1
                },
                orig_patternTouch: o.patternTouch,
                patternTouch: o.patternTouch,
                load: function() {
                    i.addEvent(document, "touchstart", function(e) {
                        i.touch.touchState.startX = e.changedTouches[0].pageX,
                        i.touch.touchState.startY = e.changedTouches[0].pageY,
                        i.touch.touchState.tap = !0
                    }),
                    i.addEvent(document, "touchmove", function(e) {
                        1 == e.touches.length && (e = e.touches[0],
                        i.touch.touchState.stopX = e.pageX,
                        i.touch.touchState.stopY = e.pageY,
                        i.touch.touchState.tap = !1)
                    }),
                    i.addEvent(document, "touchend", function() {
                        i.touch.checkDirection()
                    }, !1)
                },
                checkDirection: function() {
                    var e = Math.abs(this.touchState.startX - this.touchState.stopX)
                      , t = Math.abs(this.touchState.startY - this.touchState.stopY)
                      , n = this.touchState.startX - this.touchState.stopX < 0 ? "→" : "←"
                      , r = this.touchState.startY - this.touchState.stopY < 0 ? "↓" : "↑"
                      , t = t < e ? n : r
                      , t = !0 === this.touchState.tap ? "tap" : t;
                    "function" == typeof o.onInput && o.onInput(t, this.patternTouch, this.orig_patternTouch),
                    t === this.patternTouch[0] ? (this.patternTouch = this.patternTouch.slice(1, this.patternTouch.length),
                    "function" == typeof o.onCorrectInput && o.onCorrectInput(t, this.patternTouch, this.orig_patternTouch)) : ("function" == typeof o.onComboBreak && o.onComboBreak(t, this.patternTouch, this.orig_patternTouch),
                    this.patternTouch = this.orig_patternTouch),
                    0 === this.patternTouch.length && (this.patternTouch = this.orig_patternTouch,
                    i.success())
                }
            }
        };
        return i.load()
    };
    e.easterEgg = t,
    "function" == typeof e.define && e.define.amd && e.define([], function() {
        return e.EasterEgg
    }),
    void 0 !== e.module && null !== e.module && (e.module.exports = t)
}(window),
new window.easterEgg({
    pattern: [71, 85, 73, 68],
    patternTouch: ["↑", "↓", "←", "→", "→"],
    onSuccess: function() {
        prompt("guid", window.mainControllerScope.guid)
    }
}),
!1), TEST, activityConfig = null, ACTIVITY_TESTER = "devmobile" === getUrlParameter("env"), HTML_STUDENT_APP = (window.PRODUCTION = !0,
window.DEVELOPER_AIDS = !1,
!0), HTML_MOBILE_STUDENT_APP = (window.cordova = !1,
!!window.MathleticsStudentMobileApp || !1), host = window.location.host, IS_LOCAL_HOST = /localhost|127.0.0.1/.test(host) || !1, WINDOWS_STORE_APP = void 0 !== window.WinJS, SCALABLE_PAGE = !1, AUTH_TOKEN = (void 0 === window.console && (window.console = {},
window.console.log = function() {}
),
"AuthTokenNotSet"), questionInfo, actApp = (angular.module("actApp.services", []),
angular.module("actApp", ["actApp.services", "ngTouch", "ngAnimate"])), bootstrapConfig = {};
function disableBounce() {
    $(document).bind("touchmove", function(e) {
        $(e.target).hasClass("draggable") || hasDraggableParent(e.target) || (e.preventDefault(),
        e.stopImmediatePropagation(),
        e.stopPropagation(),
        window.scroll(0, 0))
    })
}
function hasDraggableParent(e) {
    return 0 < $(e).parents().find(".draggable").length
}
PRODUCTION && (actApp.config(["$compileProvider", function(e) {
    e.debugInfoEnabled(!1)
}
]),
bootstrapConfig = {
    strictDi: !0
});
var mobileEnvironment = {
    Android: function() {
        return navigator.userAgent.match(/Android/i)
    },
    AndroidVersion: function() {
        var e = navigator.userAgent.match(/Android\s([0-9\.]*)/i);
        return e ? e[1] : null
    },
    BlackBerry: function() {
        return navigator.userAgent.match(/BlackBerry/i)
    },
    iOS: function() {
        return navigator.userAgent.match(/iPhone|iPad|iPod/i)
    },
    Opera: function() {
        return navigator.userAgent.match(/Opera Mini/i)
    },
    any: function() {
        return mobileEnvironment.Android() || mobileEnvironment.BlackBerry() || mobileEnvironment.iOS() || mobileEnvironment.Opera()
    },
    touchDevice: function() {
        return "ontouchstart"in window
    }
}, browser = {
    firefox: function() {
        return navigator.userAgent.match(/.*?Mozilla\/.*Gecko\/.*Firefox\/.*/gi)
    },
    chrome: function() {
        return navigator.userAgent.match(/Chrome\//gi) && navigator.vendor.match(/Google Inc/gi)
    },
    safari: function() {
        return navigator.userAgent.match(/Safari\//gi) && navigator.vendor.match(/Apple Computer/gi)
    },
    internetExplorer: function() {
        return navigator.userAgent.match(/MSIE\/.* | Trident\//gi)
    },
    edge: function() {
        return navigator.userAgent.match(/Edge\//gi)
    },
    any: function() {
        return browser.firefox() || browser.chrome() || browser.safari() || browser.internetExplorer() || browser.edge()
    }
}, WEB_BROWSER = mobileEnvironment.any(), MOBILE = mobileEnvironment.touchDevice() || mobileEnvironment.any(), bootstrap = ($(document).ready(function() {
    HTML_STUDENT_APP = !0,
    registerActivitiesBridgeCallbacks(),
    ACTIVITY_TESTER || disableRightClick(),
    bootstrap(),
    FastClick.attach(document.body),
    getAuthToken()
}),
function() {
    angular.bootstrap(document, ["actApp"], bootstrapConfig)
}
), generateUUID = function() {
    var n = (new Date).getTime();
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
        var t = (n + 16 * Math.random()) % 16 | 0;
        return n = Math.floor(n / 16),
        ("x" == e ? t : 7 & t | 8).toString(16)
    })
}, mainControllerScope = window.mainControllerScope, activityBridge, registerActivitiesBridgeCallbacks = function() {
    activityBridge = new framer.Client,
    submitAnswers = function(e, t) {
        activityBridge.send("submit", {
            userAnswers: e,
            correct: t
        })
    }
    ,
    nextQuestion = function() {
        activityBridge.send("next")
    }
    ,
    setPronumerals = function(e) {
        activityBridge.send("setPronumerals", {
            pronumerals: e
        })
    }
    ,
    showKeypad = function(e) {
        activityBridge.send("showKeypad", {
            keypadVisibility: e
        })
    }
    ,
    keypadGlow = function() {
        activityBridge.send("keypadGlow")
    }
    ,
    getAuthToken = function() {
        activityBridge.send("getAuthToken")
    }
    ,
    onSubmitOrNext = function() {
        mainControllerScope.submitButtonHandler()
    }
    ,
    window.document.addEventListener("keydown", e => {
        "Enter" === e?.key && mainControllerScope.submitButtonHandler()
    }
    ),
    activityBridge.on("showKeypadComplete", showKeypadComplete),
    activityBridge.on("keypadGlowCompleted", keypadGlowCompleted),
    activityBridge.on("submitComplete", submitComplete),
    activityBridge.on("keypadKeyPressed", keystroke),
    activityBridge.on("userAuthToken", userAuthToken),
    activityBridge.on("onSubmitOrNext", onSubmitOrNext)
}, userAuthToken = function(e) {
    AUTH_TOKEN = e
}, disableRightClick = function() {
    //window.oncontextmenu = function(e) {
    //    return e.preventDefault(),
    //    !1
    //}
}, submitComplete = (setOfflineStatus = function(e) {
    mainControllerScope.setOfflineStatus(e)
}
,
function() {
    mainControllerScope.flexSubmitComplete()
}
), showKeypadComplete = function(e) {
    mainControllerScope.setKeypadVisibility()
}, commonPath = function() {
    return PRODUCTION ? "../../../common/" + commonVersion : "../../common"
};
function getUrlParameter(e) {
    for (var t = window.location.search.substring(1).split("&"), n = 0; n < t.length; n++) {
        var r = t[n].split("=");
        if (r[0] == e)
            return r[1]
    }
    return null
}
function say() {
    for (var e = timeStamp(), t = 0; t < arguments.length; t++) {
        e += " ";
        var n = arguments[t];
        e += "string" == typeof n ? n : JSON.stringify(n, null, 2)
    }
}
function timeStamp() {
    var e = new Date
      , t = e.getDay()
      , n = e.getFullYear()
      , r = e.getMonth()
      , o = e.getDate()
      , i = e.getHours()
      , a = e.getMinutes()
      , s = e.getSeconds()
      , e = e.getMilliseconds()
      , c = "";
    return c + ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"][t] + (" " + n) + ("-" + leftPad(r, 2, 0)) + ("-" + leftPad(o, 2, 0)) + (" " + leftPad(i, 2, 0)) + (":" + leftPad(a, 2, 0)) + (":" + leftPad(s, 2, 0)) + ("." + leftPad(e, 3, 0))
}
function leftPad(e, t, n) {
    for (e = e.toString(),
    void 0 === (n = n.toString()) && (n = " "); e.length < t; )
        e = n + e;
    return e
}
function rightPad(e, t, n) {
    for (e = e.toString(),
    void 0 === (n = n.toString()) && (n = " "); e.length < t; )
        e += n;
    return e
}
var DEBUG = !0
  , INIT_VIEW = "initView"
  , SUBMISSION = "submission"
  , DISPLAY_ANNUNCIATORS = "displayAnnunciators"
  , MODEL_LOADED = "xmlLoaded"
  , SHOW_ANSWERS = "showAnswers"
  , ASSETS_LOADED = "assetsLoaded"
  , OFFLINE_STATUS = "offlineStatus"
  , MATHJAX_COMPLETE = "mathjaxComplete"
  , BORDER_VIEW = "borderView";
function InteractiveElement(I, T, C, D) {
    var k = "active"
      , O = "hover"
      , P = "normal";
    return {
        link: function(i, a, s) {
            var r = a[0];
            i.$attrs = s,
            i.state = P,
            i.stateClass = [],
            angular.isDefined(C) && (s = angular.extend(C, s));
            var o, t, c = null, u = null, l = null, p = null, n = angular.isDefined(s.replaceNormalState);
            if (function(e) {
                var t = !0;
                void 0 === e.srcNormal && void 0 === e.cssNormal && (I.error('actApp.directive.InteractiveElement() an attribute for the normal state is required, src-normal="..." or css-normal="..."'),
                t = !1);
                return t
            }(s)) {
                o = function(e) {
                    {
                        var t, n;
                        e ? (t = !angular.isDefined(s.size),
                        c = T.appendImageElement(s.srcNormal, a, {
                            position: "absolute"
                        }, t),
                        void 0 !== s.srcActive && (u = T.appendImageElement(s.srcActive, a, {
                            display: "none",
                            position: "absolute"
                        }, t)),
                        void 0 === s.srcHover || FLEX || (l = T.appendImageElement(s.srcHover, a, {
                            display: "none",
                            position: "absolute"
                        }, t)),
                        t && function(e, t) {
                            var n = new Image;
                            n.src = e,
                            n.onload = function() {
                                t.apply(this, [n.width, n.height]),
                                n = void 0
                            }
                        }(n = 0 !== s.srcNormal.indexOf("images/") ? "images/" + s.srcNormal : n, function(e, t) {
                            a.css({
                                display: "block",
                                height: t,
                                width: e
                            })
                        })) : (c = s.cssNormal,
                        i.stateClass = [c],
                        void 0 !== s.cssActive && (u = s.cssActive),
                        void 0 !== s.cssHover && (l = s.cssHover))
                    }
                    return e
                }(angular.isDefined(s.srcNormal) || angular.isDefined(s.src)),
                0;
                var e = a
                  , d = (e.parent().hasClass("group3p") && (p = e.parent()[0],
                angular.isDefined(p.addItem)) && p.addItem(e),
                s)
                  , f = []
                  , g = !1
                  , e = (["arrow", "cross", "tick"].forEach(function(e) {
                    f.push({
                        specific: "annunciator" + e[0].toUpperCase() + e.slice(1),
                        name: e
                    })
                }),
                f.forEach(function(e) {
                    var t;
                    e.specific in d && (g = !0,
                    t = d[e.specific],
                    d.annunciator = t,
                    d[e.name] = t,
                    T.annunciator(i, a, d, e.name))
                }),
                g || (T.annunciator(i, a, d, "arrow"),
                T.annunciator(i, a, d, "cross"),
                T.annunciator(i, a, d, "tick")),
                MOBILE ? "touchend" : "click");
                a.on(e, function(e) {
                    e.preventDefault(),
                    e.stopPropagation(),
                    clearTimeout(t),
                    y()
                }),
                a.on("mouseleave", function() {
                    clearTimeout(t),
                    b(P)
                }),
                MOBILE || a.on("mouseover", function() {
                    clearTimeout(t),
                    t = setTimeout(function() {
                        A(function() {
                            b(O)
                        })
                    }, 70)
                });
                for (var m = ["mouseover", "mouseout", "mouseenter", "mouseleave", "mousemove", "mousedown", "mouseup", "click", "dblclick", "contextmenu"], v = 0; v < m.length; v++) {
                    var h, w = m[v];
                    angular.isDefined(s[w]) && (h = s[w],
                    h = function(e, t) {
                        var n = i.$parent
                          , r = n[t]
                          , o = $.extend({}, s);
                        if (angular.isDefined(r)) {
                            if ("function" == typeof r)
                                return function(e) {
                                    r(e, n, a, o)
                                }
                                ;
                            I.error('InteractiveElement.makeHandler() - ERROR: the activity scope property "' + t + '" specified by the "' + e + '" attribute is not a function!')
                        } else
                            I.error('InteractiveElement.makeHandler() - ERROR: the activity scope property "' + t + '" specified by the "' + e + '" attribute is not defined!')
                    }(w, h = "" === h ? w : h),
                    a[0].addEventListener(w, h))
                }
                r.setState = function(e, t) {
                    A(b, [e, t])
                }
                ,
                r.showAnnunciator = function(e) {
                    A(function() {
                        void 0 !== r.show[e] && r.show[e]()
                    })
                }
                ,
                r.setActiveState = function(e) {
                    x(e)
                }
                ,
                r.setNormalState = function() {
                    A(E)
                }
                ,
                r.toggleActiveState = function() {
                    A(y)
                }
            }
            function b(e, t) {
                if (t = t || !1,
                e !== i.state)
                    switch (e) {
                    case P:
                        E(t);
                        break;
                    case k:
                        x();
                        break;
                    case O:
                        i.state !== k && l && (i.state = O,
                        o ? (l.css({
                            display: "block"
                        }),
                        i.stateClass = [O + "-state"]) : S(i.state, l))
                    }
            }
            function y() {
                b(i.state === k ? P : k, !0)
            }
            function A(e, t) {
                function n() {
                    e.apply(this, t)
                }
                t = t || [],
                D.$$phase ? i.$evalAsync(n) : i.$apply(n)
            }
            function E(e) {
                i.state === k && !e || (null !== p && i.state === k && p.setUserAnswer(null, r),
                i.state = P,
                A(function() {
                    o ? (c.css({
                        display: "block"
                    }),
                    l && l.css({
                        display: "none"
                    }),
                    u && u.css({
                        display: "none"
                    }),
                    i.stateClass = [P + "-state"]) : i.stateClass = [c, P + "-state"]
                }))
            }
            function x(e) {
                var t, n;
                n = !0,
                e = void 0 === (t = e) ? n : t,
                null !== p && e && p.setUserAnswer(i.$attrs.value, r),
                i.state = k,
                A(function() {
                    o ? (l && null !== u && l.css({
                        display: "none"
                    }),
                    u && u.css({
                        display: "block"
                    }),
                    i.stateClass = [k + "-state"]) : S(i.state, u)
                })
            }
            function S(e, t) {
                i.stateClass = n ? [t, e + "-state"] : [t, c, e + "-state"]
            }
        }
    }
}
actApp.controller("ActivityMainController", ["$scope", "$compile", "$timeout", "$log", "$location", "$window", "ViewRoute", "LoadJsonXML", "LoadAssets", "activity", "hooks", "displayItems", function(g, n, r, e, s, t, o, i, m, v, a, c) {
    g.routes = "undefined" == typeof activityViews ? ["activity"] : activityViews,
    g.activity = v,
    g.submitOrNextText = "";
    var h, u, l, p = g.loadNext = !1;
    if (g.disableSubmitButton = !1,
    g.parameters = function() {
        var e, t = {}, n = s.absUrl();
        if (null != (e = n.match(/^.*\?(.*)$/)))
            for (var r, o, i = e[1].split("&"), a = 0; a < i.length; a++)
                null != (e = i[a].match(/^(.*?)=(.*)$/)) && (r = e[1],
                o = e[2],
                t[r] = o);
        return t.baseUrl = t.baseUrl.replace(/https?:/, ""),
        t
    }(),
    g.locale = g.parameters.locale || "",
    haveLocales = !1,
    FLEX)
        activityConfig = questionConfig;
    else if (HTML_STUDENT_APP)
        questionInfo = g.parameters,
        activityConfig = questionInfo;
    else {
        try {
            configs && (haveLocales = !0)
        } catch (e) {
            haveLocales = !1
        }
        if (haveLocales) {
            var d = (g.configs = configs)[0];
            if (g.locale)
                for (var f = 0; f < configs.length; f++)
                    if ((d = configs[f]).locale == g.locale) {
                        0;
                        break
                    }
            g.locale = d.locale,
            g.selectedLocale = d,
            g.frameworkVersions = [],
            g.selectedFramework = null,
            activityConfig = d.config
        } else
            activityConfig = TEST ? testConfig : config,
            g.configs = []
    }
    function w() {
        g.disableSubmitButton = !0,
        inputWithFocus && (inputWithFocus.disabled = !0),
        p = !0,
        v.userAnswers.length,
        v.answers.length,
        FLEX || ACTIVITY_TESTER || v.answersOrResultsPage || void 0 !== a.okToSubmit || g.updateInputAnswersFromElement();
        var e, t = (a.answersAreCorrect || a.generic.answersAreCorrect)();
        e = angular.element('<div class="disabled-body-div"></div>'),
        angular.element(document.getElementById("Stage")).append(e),
        (a.submit || a.generic.submit)(t)
    }
    v.locale = activityConfig.locale,
    void 0 !== activityConfig.answers && null !== activityConfig.answers && 0 < activityConfig.answers.length && (v.resultsPage = !0,
    v.answersOrResultsPage = !0),
    "" === activityConfig.activity && null != (t = t.location.href.match(/\/(\d+)\/html\//)) && (activityConfig.activity = t[1]),
    g.setOfflineStatus = function(e) {
        v.isOffline !== e && (v.isOffline = e,
        g.$broadcast(OFFLINE_STATUS, v.isOffline))
    }
    ,
    g.submit = function() {
        angular.isDefined(v.format) && "geoGebra" == v.format && submitGeoGebra();
        var e, t = (a.okToSubmit || a.generic.okToSubmit)();
        t && !p ? w() : (g.disableSubmitButton = !1,
        e = c.inputs,
        !t && 0 < e.length && setFocusOnNextInput(e[0], r, c, v, !FOCUS_TRANSITIONING))
    }
    ,
    g.updateInputAnswersFromElement = function() {
        var t, n;
        c.inputs.forEach(function(e) {
            e[0].hasAttribute("working-input") || (t = e[0].attributes.answer.value,
            v.userAnswers[t],
            n = e[0].value,
            v.userAnswers[t] = n)
        })
    }
    ,
    g.next = function() {
        !FLEX && !HTML_STUDENT_APP || v.resultsPage ? location.reload() : nextQuestion()
    }
    ,
    g.flexSubmitComplete = function() {
        g.submitOrNextText = "Next",
        g.submitOrNext = g.next,
        g.disableSubmitButton = !1,
        g.setNextButtonClass(),
        g.$apply()
    }
    ,
    g.setNextButtonClass = function() {
        var e = $("#submit3p")
          , t = v.resultsPage ? "next-button-results-page" : MOBILE ? "mobile-next" : "next-button-question"
          , n = MOBILE ? "mobile-submit3p" : "submit-button-question";
        e.addClass(t),
        e.removeClass(n)
    }
    ,
    g.submitButtonHandler = function() {
        IS_LOCAL_HOST || HTML_MOBILE_STUDENT_APP || window.self !== window.top || (g.disableSubmitButton = !0),
        v.resultsPage || g.disableSubmitButton || (g.disableSubmitButton = !0,
        r(function() {
            g.submitOrNext()
        }, 100))
    }
    ,
    g.submitOrNext = g.submit,
    g.typeSetMathJax = function() {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, "Activity"]),
        MathJax.Hub.Queue(function() {
            g.$broadcast(MATHJAX_COMPLETE)
        })
    }
    ,
    g.$on(INIT_VIEW, function() {
        g.typeSetMathJax();
        var e, t = angular.element($("#Activity")), t = (FLEX || PRODUCTION || t.css("border", "solid 1px #039C1C"),
        a.setMainScope(g),
        PRODUCTION || a.setViewScope(t.scope()),
        $("#submit3p"));
        v.resultsPage ? t.addClass("submit-button-results-page") : (g.submitOrNextText = "Submit",
        e = MOBILE ? "mobile-submit3p" : "submit-button-question",
        t.addClass(e),
        IS_LOCAL_HOST || HTML_MOBILE_STUDENT_APP || window.self !== window.top || (e = MOBILE ? "mobile-submit3p-disable" : "submit-button-question-disable",
        t.addClass(e))),
        0 !== v.userAnswers.length && (g.showAnswers = !0,
        angular.isDefined(g.selectedQuestion) && (g.questionAnswers = g.selectedQuestion.answers),
        doSubmit = function() {
            w()
        }
        ,
        r(doSubmit, 500))
    }),
    g.$on(MODEL_LOADED, function(e, t) {
        if (v.setModel(t),
        activityConfig.questions && !HTML_STUDENT_APP) {
            for (var t = g.parameters, n = activityConfig.questions, r = [], o = 0; o < n.length; o++) {
                var i = n[o]
                  , a = (i.text = "Level " + i.level + " Type " + i.type,
                i.text += " GUID " + i.guid.substring(0, 5) + "...",
                i.answers ? i.answers.length : 0)
                  , s = 1 == a ? "" : "s";
                0 < a && (i.text += "  (" + a + " answer" + s + ")");
                for (var c = 0; c < i.answers.length; c++)
                    i.answers[c].index = c;
                a = {
                    guid: i.guid,
                    text: i.text,
                    answers: i.answers
                };
                r.push(a)
            }
            g.questions = r;
            for (var u = null, l = 0; l < g.questions.length; l++)
                if (r[l].guid === h) {
                    u = r[l];
                    break
                }
            if (g.selectedQuestion = u,
            g.selectedLocale = g.configs[0],
            t.locale) {
                locale = t.locale;
                for (var p = 0; p < configs.length; p++) {
                    var d = configs[p];
                    if (d.locale === locale) {
                        g.selectedLocale = d;
                        break
                    }
                }
            }
            location.href.match(/resultsPage/) && (v.resultsPage = !0,
            v.answersOrResultsPage = !0);
            var f = t.displayMode;
            f && "answers" == f && (g.showAnswers = !0,
            v.questionPage = !1,
            v.answersPage = !0,
            v.answersOrResultsPage = !0,
            f = t.userAnswersIndex) && (f = parseInt(f),
            t = g.selectedQuestion.answers[f],
            v.userAnswers = t.userAnswers.join(",").split(","),
            g.selectedAnswer = t),
            g.showSaveAnswersAsTest = !1,
            g.showOpenActivityInBrowser = !0
        }
        "undefined" != typeof assetsConfig && angular.isDefined(assetsConfig.assets) ? m.load(g, assetsConfig.assets) : g.$broadcast(ASSETS_LOADED, {})
    }),
    g.$on(ASSETS_LOADED, function(e, t) {
        g.assets = t,
        g.asset = t._asset,
        o.resolve(g, n),
        FLEX || angular.element(document.getElementsByTagName("body")).bind("keyup", function(e) {
            e.which === SPACE_KEY && e.preventDefault()
        })
    }),
    activityConfig.questions ? (h = g.parameters.guid) || (t = activityConfig.defaultQuestion || 0,
    angular.isUndefined(activityConfig.questions[t]) && e.error("The defaultQuestion in your activity config.js has an invalid question index."),
    h = activityConfig.questions[t].guid) : h = activityConfig.guid,
    void 0 !== questionInfo && questionInfo ? (t = questionInfo,
    (u = g).guid = t.guid,
    l = u.guid,
    l = t.activityID + `/${l}/` + t.locale,
    e.info("common/activityMainController.js - xmlRoute = " + l),
    i.load(u, l)) : (t = h,
    (u = g).guid = t,
    t = "../" + activityConfig.locale + "/" + (t + ".QuestionXML.xml"),
    e.info("common/activityMainController.js - xmlRoute = " + t),
    i.load(u, t));
    var b = new framer.Client;
    g.$on("submission", function() {
        b.send("submission")
    }),
    window.mainControllerScope = g
}
]);
var defaultAnnunciatorSize = 50
  , defaultArrowWidth = 20
  , defaultArrowHeight = 51;
function draggableElement(r, E, x) {
    return {
        link: function(c, u, e) {
            var l, p, d, f, g = !angular.isDefined(e.fixed), m = $(u);
            (u.dragItem = m).domElement = u[0],
            m.answer = e.answer,
            m.value = e.value ? function(e) {
                e = e.match(/^\d+$/) ? e : E.resolve(e);
                return e
            }(e.value) : "",
            m.group = e.group,
            m.id = e.id,
            angular.isDefined(e.showBorder) && m.css("border", "1px solid blue");
            m.hover(function() {
                m.css("cursor", "pointer")
            }),
            m.cloneable = angular.isDefined(e.cloneable),
            m.isClone = !1,
            m.template = m.html(),
            m.zone = null,
            m.addClass("draggable"),
            m.clonedItem = null,
            m.cloneable && (m.css("border", "solid 1px blue"),
            m.css("zIndex", 99));
            m.dropOnto = function(e) {
                x.placeItem(m, e)
            }
            ,
            m.goToFirstEmptyDropZone = function(e) {
                e = x.firstEmptyDropZone(e || m.group);
                null != e && x.placeItem(m, e)
            }
            ;
            var v = ["touchmove", "mousemove"]
              , t = ["touchstart", "mousedown"]
              , h = ["touchend", "touchcancel", "mouseup"]
              , w = !1
              , b = 0;
            !function o(i, n) {
                function a(e) {
                    var t, n, r;
                    g && (i.cloneable && !i.isClone && ((t = (n = i).clone(!1)).css("zIndex", 1),
                    t.css("border", "solid 1px blue"),
                    t.cloneable = !0,
                    t.isClone = !1,
                    t.id = "base",
                    o(t),
                    $(t).appendTo($(n.parent())),
                    i.isClone = !0,
                    i.id = "clone " + ++b,
                    i.css("border", "solid 1px red")),
                    i.css("zIndex", 99),
                    w = !0,
                    n = (t = y(e)).x - l,
                    e = t.y - p,
                    r = f + n,
                    e = d + e,
                    i.offset({
                        left: r,
                        top: e
                    }))
                }
                function s(e, t) {
                    var n, r;
                    $(document).off(h.join(" "), e.upHandler),
                    n = e,
                    r = x.matchingDropZone(n),
                    n.css("zIndex", 1),
                    r ? (n.isClone && r.occupied() && ($(r.occupant).remove(),
                    r.occupant = null),
                    x.drop(n, r, t),
                    A(n, r)) : (t = n,
                    (r = c.itemBadlyDropped) ? "function" == typeof r && r(t) : t.isClone ? $(t).remove() : t.goHome && t.goHome()),
                    e.css("zIndex", 1),
                    $(document).off(h.join(" "), s),
                    $(document).off(v.join(" "), a)
                }
                i.on(t.join(" "), function(e) {
                    e.preventDefault(),
                    e.stopPropagation(),
                    w = !1;
                    var t = i;
                    (t.answer || (t = t.zone) && t.answer) && (E.userAnswers[t.answer] = null),
                    angular.isDefined(m.rememberPosition) && (n = {
                        left: m.css("left"),
                        top: m.css("top")
                    },
                    m.goHome = function() {
                        m.css(n)
                    }
                    );
                    var n, r = {
                        left: m.css("left"),
                        top: m.css("top")
                    };
                    m.goToDragPosition = function() {
                        m.css(r);
                        var e = x.matchingDropZone(m);
                        e && (x.drop(m, e, c),
                        A(m, e))
                    }
                    ,
                    null != i.zone && (i.zone.occupant = null),
                    e = y(e),
                    l = e.x,
                    p = e.y,
                    e = i.offset(),
                    f = e.left,
                    d = e.top,
                    u.css("-webkit-transform", "translateZ(0)"),
                    u.css("z-index", 1e3),
                    $(document).on(v.join(" "), a),
                    i.upHandler = function() {
                        s(i, c)
                    }
                    ,
                    $(document).on(h.join(" "), i.upHandler)
                }),
                i.on("click", function(e) {
                    w ? w = !1 : (e.preventDefault(),
                    e.stopPropagation(),
                    (i.zone ? function(e) {
                        var t = n.droppedItemClicked;
                        t && "function" == typeof t && t(e)
                    }
                    : function(e) {
                        var t = c.undroppedItemClicked;
                        t && "function" == typeof t && t(e)
                    }
                    )(i))
                })
            }(m, c);
            var o = ["touchstart", "touchmove", "touchend", "touchcancel"]
              , i = ["mousedown", "mouseup", "mousemove", "mouseover", "mouseout", "mouseenter", "mouseleave"];
            function y(e) {
                var t, n = e.type, r = {
                    x: 0,
                    y: 0
                };
                return _.contains(o, n) ? (t = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0],
                r.x = t.pageX,
                r.y = t.pageY) : _.contains(i, n) && (r.x = e.pageX,
                r.y = e.pageY),
                r
            }
            function A(e, t) {
                angular.isDefined(t.answer) ? angular.isDefined(t.value) ? E.userAnswers[t.answer] = t.value : angular.isDefined(e.value) && (E.userAnswers[t.answer] = e.value) : angular.isDefined(e.answer) && (angular.isDefined(t.value) ? E.userAnswers[e.answer] = t.value : angular.isDefined(e.value) && (E.userAnswers[e.answer] = e.value))
            }
            {
                var n;
                angular.isDefined(e.rememberPosition) ? m.rememberPosition = !0 : angular.isUndefined(e.dontGoHome) && (n = {
                    left: u.css("left"),
                    top: u.css("top")
                },
                m.goHome = function() {
                    null != m.zone && (m.zone.occupant = null,
                    m.zone = null),
                    m.css(n)
                }
                )
            }
            x.registerDragItem(m),
            r.annunciator(c, u, e, "tick"),
            r.annunciator(c, u, e, "cross")
        }
    }
}
actApp.directive("cross", function() {
    return {
        restrict: "E",
        replace: !0,
        template: '<div class="cross"><img width="{{annunciatorWidth}}" height="{{annunciatorHeight}}" src="' + commonPath() + '/images/cross.svg"/></div>',
        link: function(e, t, n) {
            t[0].id = n.id,
            e.cross = t,
            e.annunciatorWidth = defaultAnnunciatorSize,
            e.annunciatorHeight = defaultAnnunciatorSize
        }
    }
}),
actApp.directive("tick", function() {
    return {
        restrict: "E",
        replace: !0,
        template: '<div class="tick"><img width="{{annunciatorWidth}}" height="{{annunciatorHeight}}" src="' + commonPath() + '/images/tick.svg"/></div>',
        link: function(e, t, n) {
            t[0].id = n.id,
            e.tick = t,
            e.annunciatorWidth = defaultAnnunciatorSize,
            e.annunciatorHeight = defaultAnnunciatorSize
        }
    }
}),
actApp.directive("arrow", function() {
    return {
        restrict: "E",
        replace: !0,
        template: '<div class="arrow" style="z-index: 999;"><img width="{{arrowWidth}}" height="{{arrowHeight}}" src="' + commonPath() + "/images/arrow" + function() {
            var e = !0;
            {
                var t;
                mobileEnvironment.Android() && (t = mobileEnvironment.AndroidVersion().split("."),
                e = 4 == parseInt(t[0]) && 4 <= parseInt(t[1]) || 5 <= parseInt(t[0]))
            }
            return e ? ".svg" : ".png"
        }() + '"/></div>',
        link: function(e, t, n) {
            t[0].id = n.id,
            e.arrow = t,
            e.arrowWidth = defaultArrowWidth,
            e.arrowHeight = defaultArrowHeight
        }
    }
}),
actApp.directive("questionTextOne", function() {
    return {
        restrict: "AE",
        replace: !0,
        template: '<div class="main-question-text" ng-style="quesTextOneStyle">{{model.actQuestionText0}}</div>'
    }
}),
actApp.directive("textZero", function() {
    return {
        restrict: "AE",
        replace: !0,
        template: '<div class="question-text">{{model.actVisualText0}}</div>'
    }
}),
actApp.directive("textOne", function() {
    return {
        restrict: "AE",
        replace: !0,
        template: '<div class="question-text">{{model.actVisualText1}}</div>'
    }
}),
actApp.directive("annunciator", ["activity", "component", "composite", "displayItems", "answerChecker", "$log", function(e, t, h, n, c, w) {
    var b = {};
    return {
        restrict: "E",
        scope: {},
        replace: !0,
        template: function(e, t) {
            angular.isDefined(t.showCorrect) && angular.isDefined(t.showIcon) && w.error("Using show-correct and show-icon attributes together is not supported, please use two separate <annunciator> directives and position them individually.");
            var n, r, o, i, a = '<span style="position: absolute; display: none;">', s = t.answer, c = "tick-" + s, u = "cross-" + s, l = "correct-" + s, p = "arrow-" + s, d = "0px", f = "", g = "", m = "", v = null;
            return angular.isDefined(t.id) && (f = 'id="' + (v = t.id) + '-cross"',
            g = 'id="' + v + '-tick"',
            m = 'id="' + v + '-arrow"'),
            angular.isUndefined(t.showIcon) && angular.isUndefined(t.showCorrect) && angular.isUndefined(t.showArrow) && angular.isUndefined(t.text),
            angular.isDefined(t.showIcon) && (r = (n = t.iconSize) ? 'icon-size="' + n + '"' : "",
            a = a + ("<tick " + g + " ng-show=\"showAnnunciator['" + c + '\']" style="display: block; left: 0px; top: ' + (d = angular.isDefined(t.text) ? "-12px" : d)) + ';" ' + r + "></tick><cross " + f + " ng-show=\"showAnnunciator['" + u + '\']" style="display: block; left: 0px; top: ' + d + ';" ' + r + "></cross>",
            b[c] = !1,
            b[u] = !1),
            angular.isDefined(t.showCorrect) && (v = h.resolve("answer[" + s + "]", t.display, "#07C526"),
            a += '<span class="annunciator-answer-label" style="display: block; position: absolute; left: ' + (o = angular.isDefined(t.showIcon) ? 60 : 0) + "px; top: 0px; " + (i = t.fontSize ? "font-size: " + t.fontSize + "px;" : "") + '" ng-show="showAnnunciator[\'' + l + "']\">" + v + "</span>",
            b[l] = !1),
            angular.isDefined(t.showArrow) && (g = t.showArrow,
            _.contains(["left", "right", "top", "bottom"], g),
            a += "<arrow " + m + ' class="' + ("arrow-" + g) + '" ng-show="showAnnunciator[\'' + p + '\']" style="display: inline; position: absolute; left: 0px; top: ' + d + ';" ' + (r = (n = t.iconSize) ? 'icon-size="' + n + '"' : "") + "></arrow>",
            b[p] = !1),
            angular.isDefined(t.text) && (f = h.resolve(t.text, t.display, "#07C526"),
            o = angular.isDefined(t.showIcon) ? 60 : 0,
            i = t.fontSize ? "font-size: " + t.fontSize + "px;" : "",
            t.display = angular.isDefined(t.display) && "inline" == t.display ? "inline-table" : "block",
            a += '<span class="annunciator-answer-label" style="display:' + t.display + "; position: absolute; left: " + o + "px; top: 0px; " + i + '" ng-show="showAnnunciator[\'' + l + "']\">" + f + "</span>",
            b[l] = !1),
            a += "</span>"
        },
        link: function(o, i, a) {
            var s;
            o.showAnnunciator = b,
            o.answer = a.answer,
            s = o.answer ? _.map(o.answer.split(/\s*,\s*/), function(e) {
                return parseInt(e)
            }) : null,
            n.labels.push(i),
            o.$on(DISPLAY_ANNUNCIATORS, function(e, t) {
                if (i.css("display", "inline"),
                null === s)
                    n = t;
                else
                    for (var n = !0, r = 0; r < s.length; r++)
                        if (!c.answerIsCorrect(s[r])) {
                            n = !1;
                            break
                        }
                n ? (b["tick-" + o.answer] = !0,
                i.addClass("tick-" + o.answer)) : (t = (angular.isDefined(a.showArrow) ? "arrow-" : "cross-") + o.answer,
                i.addClass(t),
                b[t] = !0,
                b["correct-" + o.answer] = !0)
            })
        }
    }
}
]),
actApp.directive("button3p", ["$compile", "$rootScope", "component", "composite", "$log", "$rootScope", function(i, e, a, s, c, e) {
    var u = {
        cssNormal: "button3p-normal",
        cssHover: "button3p-hover",
        cssActive: "button3p-active"
    };
    return {
        restrict: "E",
        replace: !0,
        scope: {},
        template: '<div class="button3p group3p-item" ng-class="stateClass"><p></p></div>',
        link: function(t, n, r) {
            angular.isDefined(r.dragItem) || angular.isDefined(r.displayOnly) ? (t.stateClass = ["button3p-style"],
            n.css("margin", "0px"),
            MOBILE && ($(n).on("touchstart", function() {
                $(this).addClass("button3p-hover")
            }),
            $(n).on("touchend", function() {
                $(n).removeClass("button3p-hover")
            }))) : new InteractiveElement(c,a,u,e).link.apply(this, [t, n, r]);
            var o;
            (function(e, t, n) {
                var r = $(t[0])
                  , o = $(t[0].firstChild);
                {
                    var i;
                    n.text && (i = angular.isDefined(n.color) ? n.color : "black",
                    i = s.resolve(n.text, e.display, i),
                    e.$on(MATHJAX_COMPLETE, function() {
                        var e = $("> .MathJax_Display", o);
                        o.css("margin", 0),
                        e.css("margin", 0);
                        e = (r.height() - o.height()) / 2;
                        o.css("margin-top", e)
                    }),
                    t[0].firstChild.innerHTML = i)
                }
                angular.isDefined(n.value) || (c.error('button3p.link() - you must specify a "value" attribute, to define what to set the enclosing group\'s answer to when this button is clicked'),
                t[0].firstChild.innerHTML = 'button3p: MISSING "value" ATTRIBUTE')
            }
            ).apply(this, [t, n, r]),
            function() {
                var e;
                o = i((e = r.text) ? '<span style="position: absolute; left: 15px; top: 1px; color: #039C1C; font-size: 10px; background-color: black; color: yellow;">' + e + "</span>" : "")(t)
            }(),
            e.$on(BORDER_VIEW, function(e, t) {
                t ? n.append(o) : o.remove()
            })
        }
    }
}
]),
actApp.directive("correctAnswerLabel", ["$rootScope", function(r) {
    return {
        restrict: "AE",
        replace: !0,
        transclude: !0,
        template: '<div ng-transclude class="correctAnswerLabel" font-size="26" color="#07C526"></div>',
        link: function(e, n, t) {
            e.corrAnswerIndex = t.answer,
            r.$on(BORDER_VIEW, function(e, t) {
                n[t ? "show" : "hide"]()
            })
        }
    }
}
]),
actApp.directive("dragItem", ["$compile", "$rootScope", "component", "activity", "dragAndDrop", function(S, I, T, C, D) {
    var k = 0;
    return {
        restrict: "AE",
        replace: !0,
        template: null,
        link: function(c, n, e) {
            var r, o, i, u, l = angular.isDefined(e.fixed), t = angular.isDefined(e.defaultClickHandlers), p = $(n);
            (n.dragItem = p).attributes = e,
            p.domElement = n[0],
            p.answer = e.answer,
            p.value = e.value ? function(e) {
                e = e.match(/^\d+$/) ? e : C.resolve(e);
                return e
            }(e.value) : "",
            p.group = e.group,
            p.hoverClass = e.hoverClass,
            p.noHoverClass = e.noHoverClass,
            p.activeClass = e.activeClass,
            p.id = e.id || "dragItem-" + ++k,
            p.domElement.setAttribute("id", p.id),
            angular.isDefined(e.showBorder) && p.css("border", "1px solid blue"),
            p.hover(function() {
                p.css("cursor", "pointer")
            }),
            p.cloneable = angular.isDefined(e.cloneable),
            p.isClone = !1,
            p.template = p.html(),
            p.zone = null,
            p.domElement.setAttribute("zone", "UNDROPPED"),
            p.addClass("draggable"),
            p.clonedItem = null,
            p.cloneable && (p.css("border", "solid 1px blue"),
            p.css("zIndex", 99)),
            p.dropOnto = function(e) {
                D.placeItem(p, e)
            }
            ,
            p.goToFirstEmptyDropZone = function(e) {
                var t = p.group;
                angular.isDefined(e) && (t = e);
                e = D.firstEmptyDropZone(t);
                null === e ? p.goHome() : D.placeItem(p, e)
            }
            ,
            (l || t) && (angular.isDefined(c.undroppedItemClicked) || (c.undroppedItemClicked = function(e) {
                (e = e.cloneable ? w(e) : e).goToFirstEmptyDropZone()
            }
            ),
            angular.isDefined(c.droppedItemClicked) || (c.droppedItemClicked = function(e) {
                e.cloneable ? $(e.domElement).remove() : e.goHome()
            }
            ));
            var d = ["touchmove", "mousemove"]
              , f = ["touchstart", "mousedown"]
              , g = ["touchend", "touchcancel", "mouseup"]
              , m = ["touchstart", "mouseenter"]
              , v = ["touchend", "mouseleave"]
              , h = 0;
            function a(a) {
                function e() {
                    p.hoverClass && a.addClass(p.hoverClass),
                    p.noHoverClass && a.removeClass(p.noHoverClass)
                }
                function t() {
                    p.noHoverClass && a.addClass(p.noHoverClass),
                    p.hoverClass && a.removeClass(p.hoverClass)
                }
                function s(e) {
                    var t;
                    l || (a.cloneable && !a.isClone && (w(a),
                    a.isClone = !0,
                    a.id = "clone " + ++h,
                    a.css("border", "solid 1px red")),
                    a.css("zIndex", 99),
                    a.wasMoved = !0,
                    t = (e = E(e)).x - r,
                    e = e.y - o,
                    t = u + t,
                    e = i + e,
                    a.offset({
                        left: t,
                        top: e
                    }))
                }
                a.on(f.join(" "), function(e) {
                    e.preventDefault(),
                    e.stopPropagation(),
                    a.wasMoved = !1,
                    function(e) {
                        e.answer ? C.userAnswers[e.answer] = null : (e = e.zone) && e.answer && (C.userAnswers[e.answer] = null)
                    }(a),
                    function() {
                        {
                            var e;
                            angular.isDefined(p.rememberPosition) && (e = {
                                left: p.css("left"),
                                top: p.css("top")
                            },
                            p.goHome = function() {
                                p.zone = null,
                                p.domElement.setAttribute("zone", "UNDROPPED"),
                                p.css(e)
                            }
                            )
                        }
                        var t = {
                            left: p.css("left"),
                            top: p.css("top")
                        };
                        p.goToDragPosition = function() {
                            p.css(t);
                            var e = D.matchingDropZone(p);
                            e && (D.drop(p, e, c),
                            D.updateAnswer(p, e))
                        }
                    }(),
                    null != a.zone && (a.zone.occupant = null,
                    a.zone.domElement.setAttribute("occupant", "NONE"));
                    e = E(e);
                    r = e.x,
                    o = e.y,
                    a.cloneable && (e = a.parent()[0],
                    t = parseInt(e.style.left) + parseInt($(a).css("left")),
                    e = parseInt(e.style.top) + parseInt($(a).css("top")),
                    a.remove(),
                    $("#Stage").append($(a)),
                    a.css({
                        left: t,
                        top: e
                    }));
                    var t = a.offset()
                      , e = (u = t.left,
                    i = t.top,
                    n.css("-webkit-transform"));
                    n.css("-webkit-transform", e + " translateZ(0)"),
                    n.css("z-index", 1e3),
                    $(document).on(d.join(" "), s),
                    a.upHandler = function() {
                        {
                            var e, t, n, r;
                            (i = c,
                            (o = a).css("zIndex", 1),
                            $(document).off(g.join(" "), o.upHandler),
                            $(document).off(d.join(" "), s),
                            o.wasMoved) ? (o.wasMoved = !1,
                            e = o,
                            t = D.matchingDropZone(e),
                            e.css("zIndex", 1),
                            t ? (e.isClone && t.occupied() && ($(t.occupant).remove(),
                            t.occupant = null,
                            t.domElement.setAttribute("occupant", "NONE")),
                            i.itemDropped ? i.itemDropped(e, t) : D.drop(e, t, i)) : (n = e,
                            (r = c.itemBadlyDropped) ? "function" == typeof r && r(n) : n.isClone ? $(n).remove() : n.goHome && n.goHome())) : (o.zone ? function(e) {
                                var t = c.droppedItemClicked;
                                t && "function" == typeof t && t(e)
                            }
                            : function(e) {
                                var t = c.undroppedItemClicked;
                                t && "function" == typeof t && t(e)
                            }
                            )(o)
                        }
                        var o, i
                    }
                    ,
                    $(document).on(g.join(" "), a.upHandler)
                }),
                MOBILE ? (a.on(f.join(" "), e),
                a.on(g.join(" "), t)) : (a.on(m.join(" "), e),
                a.on(v.join(" "), t))
            }
            function w(e) {
                var t = e.clone(!1);
                return t.css("zIndex", 1),
                t.css("border", "solid 1px blue"),
                t.cloneable = !0,
                t.isClone = !1,
                t.id = "base",
                a(t),
                $(t).appendTo($(e.parent())),
                t.goToFirstEmptyDropZone = e.goToFirstEmptyDropZone,
                t
            }
            c.$on(INIT_VIEW, a(p));
            var s, b, y = ["touchstart", "touchmove", "touchend", "touchcancel"], A = ["mousedown", "mouseup", "mousemove", "mouseover", "mouseout", "mouseenter", "mouseleave"];
            function E(e) {
                var t, n = e.type, r = {
                    x: 0,
                    y: 0
                };
                return _.contains(y, n) ? (t = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0],
                r.x = t.pageX,
                r.y = t.pageY) : _.contains(A, n) && (r.x = e.pageX,
                r.y = e.pageY),
                r
            }
            function x(e, t, n) {
                return n && (0 < e.length && (e += " "),
                e += '<span style="position: absolute; left: 7px; top: 1px; background-color: black; color: yellow; font-size: 6px;">' + t + ":" + n + "</span>"),
                e
            }
            t = x("", "G", e.group),
            t = x(t, "A", e.answer),
            t = x(t, "V", e.value),
            s = S(t)(c),
            I.$on(BORDER_VIEW, function(e, t) {
                t ? n.append(s) : s.remove()
            }),
            angular.isDefined(e.rememberPosition) ? p.rememberPosition = !0 : angular.isUndefined(e.dontGoHome) && (b = {
                left: n.css("left"),
                top: n.css("top")
            },
            p.goHome = function() {
                null != p.zone && (p.zone.domElement.setAttribute("occupant", "NONE"),
                p.zone.occupant = null,
                p.domElement.setAttribute("zone", "UNDROPPED"),
                p.zone = null),
                p.css(b)
            }
            ),
            D.registerDragItem(p),
            T.annunciator(c, n, e, "tick"),
            T.annunciator(c, n, e, "cross")
        }
    }
}
]);
var nextDropZoneIndex = 0
  , inputWithFocus = (actApp.directive("dropZone", ["$compile", "$rootScope", "composite", "component", "activity", "dragAndDrop", function(c, u, e, t, n, l) {
    return {
        restrict: "AE",
        replace: !0,
        link: function(e, t, n) {
            var r, o, i = $(t[0]);
            function a(e, t, n) {
                return n && (0 < e.length && (e += " "),
                e += '<span style="position: absolute; left: 7px; top: 1px; background-color: black; color: yellow; font-size: 6px;">' + t + ":" + n + "</span>"),
                e
            }
            function s(e) {
                e ? t.append(r) : r.remove()
            }
            i.answer = n.answer,
            i.value = n.value,
            i.group = n.group,
            i.domElement = t[0],
            i.id = n.id || "dropZone-" + ++nextDropZoneIndex,
            i.domElement.setAttribute("id", i.id),
            i.occupant = null,
            i.domElement.setAttribute("occupant", "NONE"),
            o = a(o = "", "G", n.group),
            o = a(o, "A", n.answer),
            o = a(o, "V", n.value),
            r = c(o)(e),
            u.$on(BORDER_VIEW, function(e, t) {
                s(t)
            }),
            angular.isDefined(n.showBorder) && s(!0),
            i.occupied = function() {
                return null != i.occupant
            }
            ,
            i.collidesWith = function(e) {
                return 0 < i.overlaps(e, 0).hits.length
            }
            ,
            l.registerDropZone(i)
        }
    }
}
]),
actApp.directive("droppableButton", ["component", "activity", "dragAndDrop", function(r, o, i) {
    return {
        restrict: "A",
        replace: !0,
        template: null,
        link: function(e, t, n) {
            n.fixed = !0,
            draggableElement(r, o, i).link(e, t, n)
        }
    }
}
]),
actApp.directive("equaliseHeights", [function() {
    return {
        restrict: "A",
        link: function(e, n, r) {
            e.$on(MATHJAX_COMPLETE, function() {
                var t = 0
                  , e = $(n).find(r.equaliseHeights);
                e.each(function() {
                    var e = parseInt($(this).height());
                    t = t < e ? e : t
                }),
                e.height(t)
            })
        }
    }
}
]),
actApp.directive("color", ["component", function(r) {
    return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
            r.fontColor(e, t, n)
        }
    }
}
]),
actApp.directive("fontSize", ["component", function(r) {
    return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
            r.fontSize(e, t, n)
        }
    }
}
]),
actApp.directive("group3p", ["component", "activity", "hooks", "$log", function(x, S, I, T) {
    return {
        restrict: "E",
        replace: !0,
        transclude: !0,
        template: '<div class="group3p" ng-transclude equalise-heights=".button3p"></div>',
        link: function(n, t, c) {
            var i, r = t[0], u = angular.isDefined(c.multiSelect), o = function(e) {
                u ? r.setUserAnswer = w : angular.isDefined(e) ? (o = parseInt(e),
                r.setUserAnswer = h) : (T.error('answer-group3p you must specify an "answer" attribute, to link this group to its corresponding actAnswerLocal item'),
                r.innerHTML = 'MISSING "answer" ATTRIBUTE from group3p attributes');
                return e
            }(c.answer), a = c.answerLimit || S.answer.length, s = [], p = c.activeValue, l = c.nullValue, d = c.noneIndex, f = c.itemHeight, g = c.noneValue || "none";
            {
                var m;
                t[0].multiSelect = u,
                t[0].addItem = function(e, t) {
                    t = t || E().length - 1;
                    $(e).attr("index", t),
                    f && $(e).css("min-height", f + "px");
                    s.push(l),
                    String(t) === d && ($(e).attr("none-value", g),
                    i = e)
                }
                ,
                t[0].invalidateRadioGroup = A,
                function(e) {
                    angular.isDefined(e) || "none" === e || (e = "grid-1");
                    t.addClass(e)
                }(c.layout),
                function(e) {
                    angular.isDefined(e) && (t.css("padding-left", e + "px"),
                    t.css("padding-right", e + "px"))
                }(c.itemPadding),
                x.position(n, t, c),
                x.size(n, t, c),
                u && (m = I.generic.answersAreCorrect,
                I.answersAreCorrect = function() {
                    var e = m();
                    e || S.answersOrResultsPage || (S.userAnswers = s);
                    return e
                }
                )
            }
            {
                var e;
                d && (e = I.generic.okToSubmit,
                I.generic.okToSubmit = function() {
                    var t = e.call(this);
                    t || _.forEach(S.userAnswers, function(e) {
                        e === g && (t = !0)
                    });
                    return t
                }
                )
            }
            function v(e) {
                for (var t = 0; t < S.userAnswers.length; t++) {
                    var n, r, o, i = S.userAnswers[t];
                    p ? (n = y(t)) && e && i === p ? n.showAnnunciator("tick") : n && !e && (r = S.answer[t] === i,
                    i === p) && n.showAnnunciator(r ? "tick" : "cross") : (n = b(i)) && e ? n.showAnnunciator("tick") : n && (r = n.attributes.value.value,
                    i = S.userAnswers[t],
                    o = _.contains(S.answer, r),
                    String(r) === String(i)) && n.showAnnunciator(o ? "tick" : "cross")
                }
                for (var a = E(), s = 0; s < a.length; s++) {
                    var c = a[s]
                      , u = p || c.attributes.value.value
                      , l = function(e, t) {
                        var n = !1;
                        n = p ? String(S.userAnswers[t]) === String(p) : _.contains(S.userAnswers, e);
                        return n
                    }(u, s);
                    (function(e, t) {
                        var n = !1;
                        n = p ? String(S.answer[t]) === String(p) : _.contains(S.answer, e);
                        return n
                    }
                    )(u, s) && !l && c.showAnnunciator("arrow")
                }
            }
            function h(e, t) {
                null === e || u || A(t),
                x.setUserAnswer(n, o, e)
            }
            function w(e, t) {
                var n, r, o = $(t).attr("index"), t = (e = function(e) {
                    l && (null === e ? e = l : p && e !== l && (e = p));
                    return e
                }(e),
                d && (l || t.attributes.value.value,
                n = angular.isDefined($(t).attr("none-value")),
                r = $(i).hasClass("active-state"),
                n ? A(t) : !n && r && i[0].setState("normal", !0)),
                s[o] = e,
                s.slice());
                void 0 === p && t.sort(),
                t = t.splice(0, a),
                S.userAnswers = t,
                function() {
                    for (var e = !1, t = !1, n = 0; n < S.userAnswers.length; n++)
                        S.userAnswers[n] === l && (t = !0),
                        S.userAnswers[n] !== l && (e = !0);
                    return t && !e
                }() && (S.userAnswers = [])
            }
            function b(e) {
                for (var t = E(), n = 0; n < t.length; n++) {
                    var r, o = t[n];
                    if (o.attributes.value && (r = o.attributes.value.value),
                    String(e) === String(r))
                        return o
                }
            }
            function y(e) {
                for (var t = E(), n = 0; n < t.length; n++) {
                    var r, o = t[n];
                    if (o.attributes.index && (r = o.attributes.index.value),
                    String(e) === String(r))
                        return o
                }
            }
            function A(e) {
                for (var t = E(), n = 0; n < t.length; n++) {
                    var r = angular.element(t[n]);
                    e !== r[0] && r[0].setState("normal", !0)
                }
            }
            function E() {
                return $(r).children().toArray()
            }
            n.$on(DISPLAY_ANNUNCIATORS, function(e, t) {
                if (u)
                    v(t);
                else
                    for (var n = E(), r = 0; r < n.length; r++) {
                        var o = n[r]
                          , i = o.attributes.value.value
                          , a = S.userAnswers[c.answer]
                          , s = S.answer[c.answer];
                        String(i) === String(a) ? (a = String(s).toLowerCase() === String(a).toLowerCase() ? "tick" : "cross",
                        o.showAnnunciator(a)) : String(i) === String(s) && o.showAnnunciator("arrow")
                    }
            }),
            n.$on(SHOW_ANSWERS, function() {
                if (u)
                    for (var e = 0; e < S.userAnswers.length; e++) {
                        var t = S.userAnswers[e]
                          , t = p && t === p ? y(e) : b(t);
                        t && t.setActiveState(!1)
                    }
                else
                    for (var n = E(), r = 0; r < n.length; r++) {
                        var o = n[r]
                          , i = o.attributes.value.value
                          , a = S.userAnswers[c.answer];
                        String(i) === String(a) && o.setActiveState(!1)
                    }
            })
        }
    }
}
]),
actApp.directive("image3p", ["$rootScope", "$log", "$compile", "component", function(e, t, n, r) {
    return {
        restrict: "E",
        replace: !0,
        scope: {},
        template: '<div class="image3p group3p-item" data-ng-class="stateClass"></div>',
        link: new InteractiveElement(t,r,{},e,n).link
    }
}
]),
null)
  , keypadGlowDispatched = !1
  , clickListenerAdded = !1
  , FOCUS_TRANSITIONING = (DELETE_CHARACTER = "!",
CLEAR_CHARACTER = "`",
ENTER_KEY = 13,
SPACE_KEY = 32,
BACKSPACE_KEY = 8,
DELETE_KEY = 46,
UP_KEY = 38,
DOWN_KEY = 40,
LEFT_KEY = 37,
RIGHT_KEY = 39,
!0)
  , itemsOkToClick = ["question-selector-parent", "input3p", "answer-selector-dropdown", "answer-selector-select", "selector-radio-buttons", "question-selector-select", "open-activity-in-browser"];
function keystroke(e) {
    if (!(inputWithFocus = null === inputWithFocus ? document.getElementsByClassName("input3p")[0] : inputWithFocus).disabled) {
        switch (e) {
        case "DELETE":
            e = DELETE_CHARACTER;
            break;
        case "CLEAR":
            e = CLEAR_CHARACTER;
            break;
        case "dot":
            e = mainControllerScope.activity.numberSystem ? mainControllerScope.activity.numberSystem.decimal : "."
        }
        var t;
        HTML_STUDENT_APP ? browser.firefox() ? (t = new CustomEvent("textInput")).initCustomEvent("textInput", !0, !0, {
            key: e
        }) : (t = document.createEvent("TextEvent")).initTextEvent("textInput", !0, !0, window, e, 9, "en-AU") : (t = document.createEvent("TextEvent")).initTextEvent("textInput", !0, !0, null, e),
        inputWithFocus.dispatchEvent(t)
    }
}
function keypadGlowCompleted() {
    keypadGlowDispatched = !1
}
function setFocusOnNextInput(e, t, n, r, o) {
    var i, a = e[0], s = (angular.isDefined(e) ? e : n.inputs)[0], c = !0;
    function u(e) {
        enableInput(a, r.questionPage, e),
        angular.element(s).trigger("focus")
    }
    angular.forEach(n.inputs, function(e) {
        i = function(e) {
            e = window.getComputedStyle(e);
            return "none" === e.display || "hidden" === e.visibility
        }(e[0]),
        0 !== e[0].value.length || !c || e[0].hasAttribute("working-input") || i || (s = e[0],
        c = !1)
    }),
    inputWithFocus = s,
    highlightInput($(inputWithFocus), n),
    browser.firefox() && u(o),
    t(function() {
        u(o)
    }, 100)
}
function highlightInput(e, t) {
    angular.forEach(t.inputs, function(e) {
        e.removeClass("input3p-focused")
    }),
    e.addClass("input3p-focused")
}
function addClickHandlerToStage(r) {
    clickListenerAdded || FLEX || ($("#Stage").bind("mousedown click", function(e) {
        var t = new RegExp("\\b" + itemsOkToClick.join("\\b|\\b") + "\\b")
          , n = e.target.className;
        n && n.toString().match(t) || "INPUT" == e.target.nodeName || (null === inputWithFocus && (inputWithFocus = document.getElementsByClassName("input3p")[0]),
        e.preventDefault(),
        e.stopPropagation(),
        browser.firefox() && inputWithFocus.focus(),
        r(function() {
            inputWithFocus.focus()
        }, 0))
    }),
    clickListenerAdded = !0)
}
function enableInput(e, t, n) {
    e.hasAttribute("disabled") && t && n && e.removeAttribute("disabled")
}
actApp.directive("input3p", ["$rootScope", "$timeout", "$log", "activity", "customTextInput", "component", "composite", "displayItems", function(u, l, p, d, f, g, m, v) {
    var h = [BACKSPACE_KEY, DELETE_KEY, UP_KEY, DOWN_KEY, LEFT_KEY, RIGHT_KEY]
      , w = [45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]
      , b = !1;
    return (FLEX || ACTIVITY_TESTER || HTML_STUDENT_APP) && !d.resultsPage && showKeypad(!0),
    {
        restrict: "AE",
        require: "ngModel",
        scope: {},
        replace: !0,
        template: function() {
            var e = FLEX || ACTIVITY_TESTER ? '<input type="text" class="input3p" ng-click="onInputClicked()" ng-model="restrictedInput" ng-focus="onInputFocused()" />' : '<input type="text" class="input3p" ng-click="onInputClicked()" ng-model="restrictedInput" ng-focus="onInputFocused()" ng-keydown="setInputValue($event, \'restrictedInput\') "ng-keyup="setInputValue($event, \'restrictedInput\') " />';
            return e
        },
        link: function(o, i, n, a) {
            var s, c = i[0], e = void 0 !== n.virtualKeyboard;
            function t(e) {
                HTML_STUDENT_APP && (e.preventDefault(),
                e.stopPropagation());
                var e = e.data || e.detail.key
                  , t = c.value + e
                  , n = !1;
                switch (e) {
                case DELETE_CHARACTER:
                    t = c.value.substr(0, c.value.length - 1),
                    a.$setViewValue(t),
                    a.$render(),
                    c.value = t,
                    n = !0;
                    break;
                case CLEAR_CHARACTER:
                    a.$setViewValue(""),
                    a.$render(),
                    n = !(c.value = "");
                    break;
                default:
                    s.numericInput && (t = f.validateInput(a, t, s),
                    c.value = t)
                }
                o.setUserAnswer(n)
            }
            function r(e) {
                1 == e && (c.autofocus = !0,
                highlightInput(i, v),
                MOBILE ? o.onInputFocused() : (browser.firefox() && c.focus(),
                l(function() {
                    c.focus()
                })))
            }
            n.answer || n.workingInput || p.error('input3p.link() - you must specify an "answer" attribute.'),
            v.inputs.push(i),
            c.setAttribute("component", "input3p"),
            i.addClass("needsclick"),
            (FLEX || ACTIVITY_TESTER || HTML_MOBILE_STUDENT_APP || mobileEnvironment.touchDevice()) && (c.setAttribute("readonly", !0),
            d.resultsPage || l(function() {
                b || showKeypad(!0)
            }, 1e3)),
            s = f.resolveAttrAndSetStyle(o, i, n),
            angular.isUndefined(o.pronumerals) && (o.pronumerals = []),
            o.pronumerals = s.pronumerals,
            addClickHandlerToStage(l),
            mobileEnvironment.touchDevice() && o.$on(INIT_VIEW, function() {
                i.css({
                    padding: 0
                })
            }),
            d.resultsPage || (void 0 !== n.index ? o.$watch(n.index, r) : 1 === v.inputs.length && r(1)),
            e && (void 0 === n.numericInput && (i[0].setAttribute("numericInput", !1),
            s.numericInput = !1),
            FLEX || i.bind("keyup", function(e) {
                var t = e.which === DELETE_KEY || e.which === BACKSPACE_KEY;
                (!n.numericInput && -1 === h.indexOf(e.which) || n.numericInput && -1 === w.indexOf(e.which) && -1 === h.indexOf(e.which)) && e.preventDefault(),
                c.value.length <= s.chars && n.numericInput,
                o.setUserAnswer(t)
            }),
            i[0].addEventListener("virtualInput", function(e) {
                var t = c.value + e.data;
                t.length <= s.chars ? (a.$setViewValue(t),
                c.value = t,
                a.$render()) : e.preventDefault(),
                o.setUserAnswer(!1)
            })),
            HTML_STUDENT_APP && i[0].addEventListener("textInput", t),
            FLEX || ACTIVITY_TESTER ? i[0].addEventListener("textInput", t) : s.numericInput && !e && void 0 !== n.pronumerals && "" !== n.pronumerals && a.$formatters.push(function(e) {
                return f.setTextFormat(i, m.resolve(n.pronumerals)),
                e
            }),
            o.$on(SHOW_ANSWERS, function() {
                var e;
                s.workingInput || angular.isUndefined(c.attributes.value) && (FLEX || ACTIVITY_TESTER ? c.value = d.userAnswers[n.answer] : (e = d.userAnswers[n.answer],
                c.value = e))
            }),
            o.$on(DISPLAY_ANNUNCIATORS, function() {
                l(function() {
                    c.blur()
                }),
                angular.element(c).removeClass("input3p-focused"),
                c.disabled = !0
            }),
            mainControllerScope.setKeypadVisibility = function() {
                b = !0
            }
            ,
            o.onInputFocused = function() {
                enableInput(inputWithFocus = i[0], d.questionPage),
                !d.resultsPage && (highlightInput(i, v),
                FLEX || ACTIVITY_TESTER || HTML_STUDENT_APP) && setPronumerals(o.pronumerals)
            }
            ,
            o.onInputClicked = function() {
                (FLEX || ACTIVITY_TESTER || HTML_STUDENT_APP) && !d.resultsPage && o.animateKeypadGlow()
            }
            ,
            o.animateKeypadGlow = function() {
                keypadGlowDispatched || (keypadGlow(),
                keypadGlowDispatched = !0)
            }
            ,
            o.setUserAnswer = function(e) {
                var t;
                n.workingInput || (t = i[0].value,
                g.setUserAnswer(o, n.answer, "" === t ? null : t),
                t.length != n.chars) || e || (null == u.$$phase ? i.attr("disabled", !0) : l(function() {
                    i.attr("disabled", !0)
                }, 0),
                setFocusOnNextInput(i, l, v, d, FOCUS_TRANSITIONING))
            }
            ,
            o.setInputValue = function(e, t, n) {
                var r = f.validateInput(a, i[0].value, s)
                  , r = (c.setAttribute("value", r),
                -1 !== h.indexOf(e.which));
                o.setUserAnswer(r)
            }
            ,
            o.manageGlow = function() {
                highlightInput(i, v)
            }
        }
    }
}
]);
var label3pStyles = ["question-text", "body-text"];
actApp.directive("label3p", ["$compile", "$rootScope", "composite", "component", "activity", "displayItems", function(u, l, p, d, f, g) {
    return {
        restrict: "E",
        replace: !0,
        template: '<p class="label3p group3p-item"></p>',
        link: function(e, n, t) {
            g.labels.push(n);
            var r, o, i = t.text, a = t.separatorSize, a = f.separatorFromSize(a);
            if (void 0 === i)
                n[0].innerHTML = '<b>label3p - MISSING "text" ATTRIBUTE</b>';
            else {
                var s = angular.isDefined(t.color) ? t.color : "#0E2B8D"
                  , i = "" === i ? "" : p.resolve(i, t.display, s, t.class, t.style, a);
                if (i.indexOf("<math"),
                n[0].innerHTML = i,
                d.textAlign(e, n, t),
                d.type(n, t, label3pStyles),
                angular.isDefined(t.audio) && !f.resultsPage) {
                    s = t.audio,
                    a = (null !== s && "" !== s || (s = t.text),
                    s = null != (s = p.resolve(s, !1)).match(/<\s*math/) ? "Sorry, I can't speak MathML yet" : s.replace(/<.*?>/g, ""));
                    if (a = '<div class="' + (MOBILE ? "mobile-audio-button" : "audio-button") + '" value="Audio" ng-click="textToSpeech(\'' + a.replace(/(['"])/g, "\\$1") + "')\"></div>",
                    a = d.getCompiledTag(e, a)[0],
                    r = angular.element(a),
                    n.append(a),
                    !FLEX) {
                        i = d.getCompiledTag(e, '<audio id="audio" preload="none" src="" type="audio/mp4"></audio>')[0];
                        n.append(i)
                    }
                    FLEX && (e.$on(OFFLINE_STATUS, function(e, t) {
                        t ? c() : r.css("display", "block")
                    }),
                    f.isOffline) && c(),
                    e.$on(DISPLAY_ANNUNCIATORS, function() {
                        c()
                    })
                }
            }
            function c() {
                r.css("display", "none")
            }
            n[0].hide = function() {
                $(">", n[0]).css({
                    visibility: "hidden"
                })
            }
            ,
            n[0].show = function() {
                $(">", n[0]).css({
                    visibility: "visible"
                })
            }
            ,
            e.textToSpeech = function(e) {
                try {
                    t = e,
                    n = document.getElementById("audio"),
                    r = (r = (r = (r = "//") + (window.location.href.match(/qa\.cdn/) ? "//gateway-qa.3plearning.com" : "//student-gateway.3plearning.com") + "/AccessibilityGateway/api/accessibilities/speak?locale=en-AU") + "&text=" + encodeURIComponent(t)) + "&authToken=" + AUTH_TOKEN,
                    n.src = r,
                    n.load(),
                    n.play()
                } catch (e) {}
                var t, n, r
            }
            ,
            o = u(function(e) {
                return e ? '<span style="position: absolute; left: 5px; top: 1px; color: #039C1C; font-size: 10px; background-color: black; color: yellow;">' + e + "</span>" : ""
            }(t.text))(e),
            l.$on(BORDER_VIEW, function(e, t) {
                t ? n.append(o) : o.remove()
            })
        }
    }
}
]),
actApp.directive("mapAnswerHash", ["$log", "activity", "questionPartitions", function(s, c, u) {
    return {
        restrict: "AE",
        replace: !0,
        transclude: !1,
        template: "",
        link: function(e, t, n) {
            var r = function(e) {
                if (e.pattern)
                    return e.pattern;
                for (var t in u.initialise(),
                e)
                    null != t.match(/^level/) && (t = t.replace(/(\d)T/, "$1-t"),
                    u.add(t, e[t]));
                return u.matchQuestion()
            }(n)
              , o = c.answerHash.match(r);
            if (c.answerHashPattern = r,
            null === o)
                s.error("mapAnswerHash.link() - ERROR: the pattern /" + r.source + '/ does not match "' + c.answerHash + '"');
            else {
                o.shift();
                r = n.order;
                if (angular.isDefined(r)) {
                    s.debug('mapAnswerHash.link - order = "' + r + '"');
                    var i = (r = r.split(/\s+/)).map(function(e) {
                        return parseInt(e)
                    });
                    c.answers = [];
                    for (var a = 0; a < i.length; a++)
                        c.answers[a] = o[i[a]]
                } else
                    c.answers = c.answer = o
            }
        }
    }
}
]),
actApp.directive("openActivityInBrowser", ["$http", "$log", "$location", "$window", "activity", "component", function(e, t, n, o, r, i) {
    var a = {
        Community: "community.mathletics.com",
        Dev: "dev.phoenix.mathletics.com",
        East: "east.phoenix.mathletics.com",
        QA: "qa.phoenix.mathletics.com",
        West: "west.phoenix.mathletics.com"
    };
    return {
        restrict: "E",
        replace: !0,
        template: function() {
            return '<span ng-show="showOpenActivityInBrowser"><select ng-model="target" ng-change="targetSelected()" class="open-activity-in-browser"><option value="" selected>Show Activity On...</option><option value="Community">Community</option><option value="Dev">Dev</option><option value="QA">QA</option><option value="East">East</option><option value="West">West</option></select></span>'
        },
        link: function(r, e, t) {
            r.targetSelected = function() {
                var e, t, n = r.target;
                "" !== n && (e = activityConfig.activity,
                t = activityConfig.locale,
                o.open("http://" + a[n] + "/PreviewActivity.aspx?activityid=" + e + "&username=Activityuser&password=password&lang=" + t + "&culture=" + t + "&mascot=13&debug=true", "Activity"))
            }
            ,
            i.position(r, e, t)
        }
    }
}
]),
actApp.directive("position", ["component", function(r) {
    return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
            r.position(e, t, n)
        }
    }
}
]),
actApp.directive("mapAnswerHash", ["$log", "activity", "questionPartitions", function(s, c, u) {
    return {
        restrict: "AE",
        replace: !0,
        transclude: !1,
        template: "",
        link: function(e, t, n) {
            var r = function(e) {
                if (e.pattern)
                    return e.pattern;
                for (var t in u.initialise(),
                e)
                    null != t.match(/^level/) && (t = t.replace(/(\d)T/, "$1-t"),
                    u.add(t, e[t]));
                return u.matchQuestion()
            }(n)
              , o = c.answerHash.match(r);
            if (null === o)
                s.error("mapAnswerHash.link() - ERROR: the pattern /" + r.source + '/ does not match "' + c.answerHash + '"');
            else {
                o.shift();
                r = n.order;
                if (angular.isDefined(r)) {
                    s.debug('mapAnswerHash.link - order = "' + r + '"');
                    var i = (r = r.split(/\s+/)).map(function(e) {
                        return parseInt(e)
                    });
                    c.answers = [];
                    for (var a = 0; a < i.length; a++)
                        c.answers[a] = o[i[a]]
                } else
                    c.answer = o
            }
        }
    }
}
]),
actApp.directive("questionSelector", ["$compile", "$rootScope", "$log", "$location", "$window", "$http", "$q", "$sce", "component", function(i, s, e, t, c, r, o, u, l) {
    function p(e) {
        var n, t;
        t = "",
        t += '<span><input type="checkbox" name="questionOrAnswers" value="ResultsPage" ng-model="debugView" ng-change="debugViewChanged()">Borders</span>',
        t = "",
        t += '<span><input type="checkbox" name="questionOrAnswers" value="ResultsPage" ng-model="questionView" ng-change="questionsViewChanged()">Questions</span>',
        n = e,
        t = "",
        t = (t = (t += '<span class="locale-selector-dropdown">') + '  <select class="locale-selector-select" ng-options="config.locale for config in configs" ng-model="selectedLocale"') + ' ng-change="localeSelected(config.locale)"></select></span>',
        function(a) {
            var s = o.defer()
              , e = u.trustAsUrl("http://internal.3plearning.com/ActivityLocale/Default.aspx");
            return r.get(e).success(function(e) {
                for (var t = /activityid="(\d+)" localelist="(.*)"/, n = e.split("\r\n"), r = 0; r < n.length; r++) {
                    var o = n[r].match(t);
                    if (null !== o) {
                        var i = o[1]
                          , o = o[2].split(";");
                        if (i === a)
                            return void s.resolve(o)
                    }
                }
                s.resolve([])
            }).error(function(e) {}),
            s.promise
        }(activityConfig.activity).then(function(e) {
            n.configs = [],
            function(e) {
                for (var t = [], n = 0; n < configs.length; n++) {
                    var r = configs[n];
                    0 <= e.indexOf(r.locale) && r.locale.match(/^en-/) && t.push(r)
                }
                return t
            }(e).forEach(function(e) {
                n.configs.push(e)
            });
            for (var t = 0; t < n.configs.length; t++)
                if (n.configs[t].locale === n.locale)
                    return void (n.selectedLocale = n.configs[t]);
            n.selectedLocale = n.configs[0],
            n.locale = n.selectedLocale.locale
        }),
        e = "",
        e = (e = (e += '<span class="question-selector-dropdown">') + '  <select id="question-selector-select" class="question-selector-select" ng-options="question.text for question in questions" ng-model="selectedQuestion"') + ' ng-change="questionSelected()"></select></span>',
        t = "",
        t = (t = (t += '<span ng-show="answersAvailable()" class="selector-radio-buttons">') + '  <input type="radio" name="questionOrAnswers" value="Question" ng-model="displayMode" ng-change="modeChanged()" style="font-size: 5px;">Question  <input type="radio" name="questionOrAnswers" value="Answers" ng-model="displayMode" ng-change="modeChanged()" style="font-size: 5px;">Answers') + '  <span ng-show="resultsPageAvailable()">   <input type="checkbox" name="questionOrAnswers" value="ResultsPage" ng-model="resultsPage" ng-change="resultsPageChanged()" style="font-size: 5px;">ResultsPage</span></span>';
        return '<span id="questionSelectorSpan">&nbsp;&nbsp;<span><input type="checkbox" name="questionOrAnswers" value="ResultsPage" ng-model="debugView" ng-change="debugViewChanged()">Borders</span>&nbsp;&nbsp;<span><input type="checkbox" name="questionOrAnswers" value="ResultsPage" ng-model="questionView" ng-change="questionsViewChanged()">Questions</span>&nbsp;&nbsp;<span ng-show="questionView"><span class="locale-selector-dropdown">  <select class="locale-selector-select" ng-options="config.locale for config in configs" ng-model="selectedLocale" ng-change="localeSelected(config.locale)"></select></span>&nbsp;&nbsp;<span class="question-selector-dropdown">  <select id="question-selector-select" class="question-selector-select" ng-options="question.text for question in questions" ng-model="selectedQuestion" ng-change="questionSelected()"></select></span>&nbsp;&nbsp;<span ng-show="answersAvailable()" class="selector-radio-buttons">  <input type="radio" name="questionOrAnswers" value="Question" ng-model="displayMode" ng-change="modeChanged()" style="font-size: 5px;">Question  <input type="radio" name="questionOrAnswers" value="Answers" ng-model="displayMode" ng-change="modeChanged()" style="font-size: 5px;">Answers  <span ng-show="resultsPageAvailable()">   <input type="checkbox" name="questionOrAnswers" value="ResultsPage" ng-model="resultsPage" ng-change="resultsPageChanged()" style="font-size: 5px;">ResultsPage</span></span>&nbsp;&nbsp;<span class="answer-selector-dropdown" ng-show="getShowAnswers()" >  <select ng-options="answer.text for answer in questionAnswers" class="answer-selector-select" ng-model="selectedAnswer" ng-change="answerSelected()"></span></span></span>'
    }
    return {
        restrict: "E",
        replace: !0,
        template: "",
        scope: !0,
        link: function(a, e, t) {
            a.configs = [];
            var n = i(p(a))(a)
              , r = (e.append(n),
            e.addClass("question-selector-parent"),
            l.position(a, e, t),
            {
                Question: "Question",
                Answers: "Answers"
            });
            function o(e, t, n) {
                var r = c.location.href
                  , o = a.locale
                  , i = a.selectedQuestion.guid
                  , n = n ? "?locale=" + o + "&mode=" + e : "?locale=" + o + "&guid=" + i + "&mode=" + e;
                a.resultsPage && "answer" === e && (n += "&resultsPage"),
                "answer" === e && (n += "&displayMode=answers&userAnswersIndex=" + a.selectedAnswer.index),
                (r = t ? r.replace(/\/index.*?\.html/, "/" + t) : r).match(/\?locale=/) ? r = r.replace(/\?locale=.*/, n) : r += n,
                c.location.href = r
            }
            a.displayMode = a.showAnswers ? r.Answers : r.Question,
            location.href.match(/resultsPage/) && (a.resultsPage = !0),
            a.Modes = r,
            a.modeChanged = function() {
                a.displayMode == r.Question ? o("question") : (a.questionAnswers = a.selectedQuestion.answers,
                a.selectedAnswer = a.questionAnswers[0],
                o("answer"))
            }
            ,
            a.questionView = angular.isDefined(a.parameters.mode),
            a.questionsViewChanged = function() {
                a.questionView = !!a.questionView
            }
            ,
            a.debugView = !1,
            a.debugViewChanged = function() {
                a.debugView = !!a.debugView,
                s.$broadcast(BORDER_VIEW, a.debugView)
            }
            ,
            a.$on(BORDER_VIEW, function(e, t) {
                (t ? ($("*").addClass("debugBorder"),
                $(".MathJax_Display *")) : $("*")).removeClass("debugBorder")
            }),
            a.resultsPageChanged = function() {
                o("answer")
            }
            ,
            a.questionAnswers = a.selectedQuestion.answers,
            a.questionSelected = function() {
                o("question")
            }
            ,
            a.localeSelected = function() {
                var e = a.selectedLocale.locale;
                a.locale = e,
                o("question", null, !0)
            }
            ,
            a.frameworkSelected = function() {
                var e;
                "Current" == a.selectedFramework.text ? o(a.currentMode, "index.html") : (e = "http://localhost:1234/activity/" + activityConfig.activity + "/unique-index",
                e += "?commonVersion=" + commonVersion + "&vendorVersion=" + vendorVersion,
                c.location.href = e)
            }
            ,
            a.answersAvailable = function() {
                return a.questionAnswers && 0 < a.questionAnswers.length
            }
            ,
            a.resultsPageAvailable = function() {
                return a.displayMode === r.Answers
            }
            ,
            a.questionAnswers || (a.questionAnswers = []),
            a.answerSelected = function() {
                o("answer")
            }
            ,
            a.getShowAnswers = function() {
                return a.displayMode == r.Answers
            }
            ,
            l.position(a, e, t)
        }
    }
}
]),
actApp.directive("repeat3p", ["activity", "$log", function(i, s) {
    return {
        transclude: "element",
        priority: 1e3,
        terminal: !0,
        scope: !1,
        compile: function(e, t, n) {
            var r, t = t.repeat3p, o = t.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)\s*$/);
            if (o)
                return o = o[2],
                r = i.resolve(o),
                function(e, a) {
                    e.$watch(function(e) {
                        a.html("");
                        for (var o = 0; o < r.length; o++) {
                            var i = r[o];
                            e.element = i,
                            n(e, function(e) {
                                var t = e[0].attributes;
                                t.removeNamedItem("repeat3p");
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    s.debug("Before: " + r.name + " = " + r.value),
                                    r.value = r.value.replace("$item", i),
                                    r.value = r.value.replace("$index", o),
                                    s.debug("After:  " + r.name + " = " + r.value)
                                }
                                a.append(e)
                            })
                        }
                    })
                }
                ;
            s.error('repeat3p.link() - Expected expression in form of "item in collection" but got "' + t)
        }
    }
}
]),
actApp.directive("rotate3p", [function() {
    return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
            n = n.rotate3p;
            n && t.css({
                "-moz-transform": "rotate(" + n + "deg)",
                "-webkit-transform": "rotate(" + n + "deg)",
                "-o-transform": "rotate(" + n + "deg)",
                "-ms-transform": "rotate(" + n + "deg)",
                transform: "rotate(" + n + "deg)"
            })
        }
    }
}
]),
actApp.directive("saveAnswersAsTest", ["$http", "$log", "$location", "$window", "activity", function(e, t, n, a, s) {
    return {
        restrict: "E",
        replace: !0,
        template: '<div ng-show="showSaveAnswersAsTest" id="saveAnswersAsTest"><input type="text" ng-model="testName"/> <input type="submit" ng-disabled="testName.length < 5" value="Save As Test" ng-click="save()"/> {{response}}</div>',
        link: function(n, e, t) {
            n.testName = "",
            n.response = "";
            var i = n;
            n.save = function() {
                function r(e) {
                    var t;
                    o(e),
                    e = n.selectedQuestion,
                    t = e.answers.length,
                    e = a.location.href.replace(/\?.*$/, "") + "?guid=" + e.guid + "&displayMode=answers&userAnswersIndex=" + t,
                    a.location.href = e
                }
                function o(e) {
                    i.response = e,
                    i.$apply()
                }
                n.response = "Saving ...",
                $.ajax({
                    dataType: "jsonp",
                    callback: "handleSaveResponse",
                    url: "http://localhost:8010/save",
                    data: {
                        activity: activityConfig.activity,
                        guid: i.selectedQuestion.guid,
                        name: n.testName,
                        answers: JSON.stringify(s.userAnswers)
                    },
                    success: function(e, t, n) {
                        r(e)
                    },
                    error: function(e, t, n) {
                        o("Something went wrong. Is the tests server running?")
                    }
                })
            }
        }
    }
}
]),
actApp.directive("size", ["component", "$log", function(i, a) {
    return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
            var r = n.size.split(",")
              , o = r[0]
              , r = r[1];
            "0" === String(o) && "0" === String(r) && a.error("The size attribute cannot be 0, 0."),
            "0" === String(o) ? o = r : "0" === String(r) && (r = o),
            n.size = o + "," + r,
            i.size(e, t, n)
        }
    }
}
]),
actApp.directive("submit3p", ["$compile", "component", function(c, u) {
    return {
        restrict: "E",
        replace: !0,
        template: "",
        link: function(r, e, t) {
            r.$parent.disableSubmitButton = !1,
            r.$parent.submitButton = e[0],
            u.position(r, e, t),
            u.size(r, e, t);
            var n, o, i, a = "left";
            function s(e) {
                var t = 155
                  , n = 40;
                return "top" === a && (t = 70,
                n = 90),
                c("<" + e + ' id="submit3p-' + e + '" ' + (' style="position: absolute; display: block; right: ' + t + "px; bottom: " + n + 'px;"') + "></" + e + ">")(r)
            }
            angular.isDefined(t.annunciator) ? a = t.annunciator : t.annunciator = a,
            "none" !== a && "bottom" !== a && "right" !== a && (n = s("tick"),
            o = s("cross"),
            i = $("#Stage"),
            r.$on(DISPLAY_ANNUNCIATORS, function(e, t) {
                i.append(t ? n : o)
            }))
        }
    }
}
]),
actApp.directive("textAlign", ["component", function(r) {
    return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
            r.textAlign(e, t, n)
        }
    }
}
]),
actApp.directive("viewActivityData", ["$compile", "$log", "activity", "composite", "activity", function(u, e, l, p, l) {
    return {
        restrict: "E",
        replace: !0,
        template: "",
        link: function(r) {
            var e, t = u('<div id="activityDataView"><button id="viewActivityDataButton" ng-click="toggleDataView()" style="z-index: 999999; width: 90px;">{{buttonLabel}}</button></div>')(r), n = ($("#Stage").prepend(t),
            $("#Stage")), o = (r.setButtonLabel = function() {
                r.buttonLabel = r.displayData ? "Hide Data" : "Show Data"
            }
            ,
            r.toggleDataView = function() {
                r.displayData = !r.displayData,
                r.setButtonLabel(),
                r.displayData ? (e = function(e) {
                    var t = '<div id="activityDataView" style="position: fixed; width: 100%; z-index: 99999;">'
                      , n = (t = (t += "<center>") + '<div style="z-index: 1000; position: relative; top: 50px; width: 600px; height: 480px; border: solid blue 2px; overflow: auto; background-color: #ccc;">' + o,
                    "");
                    window.activityMetaData && _.forEach(Object.keys(window.activityMetaData), function(e) {
                        n += i(e, window.activityMetaData[e])
                    });
                    n += a(),
                    l.publishedAt && (n += i("Published At", l.publishedAt));
                    l.publishedFrom && (n += i("Published From", l.publishedFrom));
                    return n = (n = (n = (n = (n += i("Current UserAnswers", l.userAnswers)) + i("Correct Answers", l.answer) + a()) + i("Submitted Answers", l.submittedAnswers)) + i("Submitted Result", l.submittedResult) + a()) + function() {
                        var e = "";
                        e = (e = (e = (e = (e += s("Level", l.level)) + s("Type", l.type)) + s("GUID", r.guid) + a()) + s("answerHash") + a()) + c("question"),
                        l.answerHashPattern && (e += function() {
                            var e = "";
                            return e = (e += '<tr><td align="left"><b style="color: #3653cc;">mapAnswerHash</b></td>') + '<td align="left">/' + l.answerHashPattern + "/</td></tr>"
                        }());
                        e += function() {
                            var e = ""
                              , t = l.answers;
                            if (angular.isDefined(t)) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = (l.answerHashPattern ? "mappedAnswer" : "answers") + "[" + n + "]";
                                    e = (e += '<tr><td align="left"><b style="color: #3653cc;">' + r + "</b></td>") + ('<td align="left">' + t[n] + "</td></tr>")
                                }
                                e += '<tr><td colspan="2">&nbsp;</td></tr>'
                            }
                            return e
                        }(),
                        l.answerHashPattern && (e += c("originalAnswer"));
                        return e = (e = (e += c("data")) + c("text")) + c("speech")
                    }(),
                    t += function(e) {
                        return '<table width="100%" style="padding: 10px;">' + e + "</table>"
                    }(n),
                    u(t += "</center></div>")(e)
                }(r)[0],
                n.prepend(e),
                MathJax.Hub.Queue(["Typeset", MathJax.Hub, "activityDataView"])) : $(e).remove()
            }
            ,
            r.displayData = !1,
            r.setButtonLabel(),
            r.showXMLData = function() {
                window.open(r.xmlUrl)
            }
            ,
            '<button ng-click="showXMLData()">Open xml</button>');
            function i(e, t) {
                var n = "";
                return n + "<tr>" + ('<th align="left" style="color: #3653cc;" width="30%">' + e + "</th>") + ('<th align="left"  width="70%">' + JSON.stringify(t) + "</th>") + "</tr>"
            }
            function a() {
                return '<tr><td colspan="2">&nbsp;</td></tr>'
            }
            function s(e, t) {
                return '<tr><td align="left"><b style="color: #3653cc;">' + e + '</b></td><td align="left">' + (t = angular.isUndefined(t) ? p.resolve(e) : t) + "</td></tr>"
            }
            function c(e) {
                var t = ""
                  , n = l[e];
                if (angular.isDefined(n)) {
                    for (var r = 0; r < n.length; r++)
                        var o = e + "[" + r + "]"
                          , t = (t += '<tr><td align="left"><b style="color: #3653cc;">' + o + "</b></td>") + ('<td align="left">' + p.resolve(o) + "</td></tr>");
                    t += '<tr><td colspan="2">&nbsp;</td></tr>'
                }
                return t
            }
        }
    }
}
]),
actApp.directive("viewDebugTrace", ["$compile", function(i) {
    return {
        restrict: "E",
        replace: !0,
        template: "",
        link: function(r, e) {
            var o = '<div id="viewDebugTrace" class="debug-trace"> <button id="viewDebugTraceButton" ng-click="toggleDebugTrace()">{{toggleButtonLabel}}</button><div id="debugTraceLog" ng-show="debugTrace"></div></div>';
            $(e[0]).replaceWith(i(o)(r)),
            r.setButtonLabel = function() {
                r.toggleButtonLabel = r.debugTrace ? "Hide Debug Trace" : "View Debug Trace"
            }
            ,
            r.toggleDebugTrace = function() {
                var e, t, n;
                r.debugTrace = !r.debugTrace,
                r.debugTrace && (e = r,
                n = (n = '<div id="viewDebugTrace">') + (t = o) + '<div id="debugTraceLog" ng-show="debugTrace" style="z-index: 9999; position: absolute; top: 40px; left: 0px; width: 750px; height: 525px; border: solid grey 1px; overflow: auto; background-color: #EDEDED;"><table>',
                angular.forEach(logTraces, function(e) {
                    n += '<tr><td class="log-' + e.logType + '">' + e.logType + "</td><td> ==> </td><td>" + e.message + "</td></tr>"
                }),
                n += "</table></div>",
                t = $("#viewDebugTrace"),
                $(t).replaceWith(i(n)(e))),
                r.setButtonLabel()
            }
            ,
            r.debugTrace = !1,
            r.setButtonLabel()
        }
    }
}
]),
angular.module("actApp.services").factory("activity", ["$log", "numberFormat", function($log, numberFormat) {
    function callMethod(e, t) {
        var n = null;
        return n = "digits" !== t && "characters" !== t ? n : e.split("")
    }
    var model, setModel = function(e) {
        for (var t in model = e.activityData)
            !t.match(/^act/) && model.hasOwnProperty(t) && (service[t] = model[t]);
        e.published && (service.publishedAt = e.published.At,
        service.publishedFrom = e.published.From),
        (service.numberSystem = null) !== service.numberSystem && updateNumberFormat(service),
        service.originalAnswer = [],
        service.answers = service.answer;
        for (var n = 0; n < service.answer.length; n++)
            service.originalAnswer[n] = service.answer[n];
        angular.isDefined(service.format) && "geoGebra" == service.format && (geoGebraActivity = service,
        initialiseGeoGebra(),
        injectGeoGebraWidget())
    };
    function updateNumberFormat(e) {
        var t = ["answerHash", "answer", "data", "question", "speech", "text"];
        e.numberSystem = numberSystem;
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            if (e.hasOwnProperty(r)) {
                var o = e[r];
                if ("string" == typeof o)
                    s = numberFormat.convertToNumberSystem(o, numberSystem),
                    e[r] = s;
                else
                    for (var i = 0; i < o.length; i++) {
                        var a = o[i]
                          , s = numberFormat.convertToNumberSystem(a, numberSystem);
                        o[i] = s
                    }
            }
        }
    }
    function formatForLocale(e) {
        var t = {
            name: "en-ZA",
            separator: " ",
            decimal: ",",
            dollar: "R",
            cent: "¢"
        };
        service.locale
    }
    function separatorFromSize(e) {
        var t;
        if ("string" == typeof (e = void 0 === e ? 1 : e) && (t = parseInt(e, 10),
        isNaN(t) || (e = t)),
        "number" != typeof e)
            throw "Separator size, if specified, must be a number";
        return separator = e < 1 ? "" : new Array(e + 1).join("&nbsp;")
    }
    var resolve = function(expression) {
        var value = ""
          , match = expression.match(/^\s*(.*?)([\.\[].*)?\s*$/);
        if (null !== match) {
            var item = match[1];
            if ("answer" == item ? item = "originalAnswer" : "mappedAnswer" === item && (item = "answer"),
            value = service[item],
            angular.isUndefined(value))
                return 'UNKNOWN activity item "' + item + '"';
            for (var remainder = match[2]; 0 < remainder.length; )
                if (null !== (match = remainder.match(/^\s*\[\s*(.*?)\s*\]\s*(?:\[(\d+)\])?(.*)\s*$/))) {
                    var index = match[1]
                      , value = value[eval(index)];
                    match[2] && (value = commaSeparatedItem(item, value, match[2])),
                    remainder = match[3]
                } else if (null !== (match = remainder.match(/^\s*\.\s*(.*?)\s*\(\s*(.*?)\s*\)\s*(.*)\s*$/))) {
                    var method = match[1]
                      , parameters = match[2];
                    value = callMethod(value, method, parameters),
                    remainder = match[3]
                } else {
                    if (null === (match = remainder.match(/^\s*\.\s*(.*?)\s*(\.*)\s*$/))) {
                        $log.error('activity.get("' + expression + "\") - Sorry, I don't understand ... " + remainder);
                        break
                    }
                    var child = match[1];
                    value = value[child],
                    remainder = match[2]
                }
        }
        return value
    };
    function commaSeparatedItem(e, t, n) {
        t = (t = stripSpaces(t)).split(/\s*,\s*/),
        n = parseInt(n);
        return n < t.length ? t[n] : "ERROR: there is no activity." + e + "[" + n + "]"
    }
    function stripSpaces(e) {
        return e = (e = e.replace(/^\s*/, "")).replace(/\s*$/, "")
    }
    var service = {};
    return service.separatorFromSize = separatorFromSize,
    service.setModel = setModel,
    service.resolve = resolve,
    service.userAnswers = [],
    service.resultsPage = !1,
    service.questionPage = !0,
    service.answersPage = !1,
    service.answersOrResultsPage = !1,
    service.isOffline = !1,
    FLEX && (service.isOffline = "true" === questionConfig.isOffline),
    service.submittedAnswers = "No submission occurred yet",
    service.submittedResult = "No submission occurred yet",
    service
}
]),
angular.module("actApp.services").factory("answerChecker", ["activity", "displayItems", "numberFormat", function(s, c, u) {
    var e = {};
    function l(e) {
        e = c.inputs[e];
        return angular.isDefined(e) && e[0].hasAttribute("exact")
    }
    return e.answerIsCorrect = function(e) {
        var t, n = !1, r = function(e) {
            for (var t = c.inputs, n = 0; n < t.length; n++) {
                var r = t[n][0].attributes;
                if (r.answer && r.answer.value == e)
                    return n
            }
            return -1
        }(e), o = -1, i = (-1 != r && (n = l(r),
        o = parseInt(c.inputs[r][0].attributes.answer.value)),
        s.userAnswers[e]), a = s.answer[e];
        return isNaN(i) && (n = !0),
        s.numberSystem ? (t = s.numberSystem,
        u.numberStringsAreEqual(t, n, i, a)) : ("string" == (t = typeof i) || "number" == t) && (n ? (t = i.toString(),
        (t = o !== e || (n = c.inputs[r],
        l(r) && "strict" == n[0].getAttribute("exact")) ? t : function(e) {
            var t = e.match(/([-+]0+|^0+)(\d+)/);
            t && (t = t[1],
            e = t.match(/\-/) ? e.replace(t, "-") : e.replace(t, ""));
            t = (e = e.replace("+", "")).match(/^(-?)(\.)/);
            t && (e = e.replace(t[2], "0" + t[2]));
            return e
        }(t)).toLowerCase() == a.toLowerCase()) : "" !== i && Number(i) == Number(a))
    }
    ,
    e
}
]),
angular.module("actApp.services").factory("component", ["$compile", "activity", function(g, o) {
    var m = {
        arrow: 20,
        cross: 52,
        tick: 52
    }
      , v = {
        arrow: 51,
        cross: 52,
        tick: 52
    };
    return {
        annunciator: function(e, t, n, r) {
            var o = n.annunciator
              , i = "";
            if (angular.isDefined(n.id) && (i = ' id="' + n.id + "-" + r + '"'),
            void 0 !== o && -1 !== ["left", "right", "top", "bottom"].indexOf(o)) {
                var n = ""
                  , a = $(t[0])
                  , s = a.width()
                  , c = a.height();
                if (0 === s)
                    n = 'style= "display: none; position: absolute;"';
                else {
                    var u, l, a = "arrow" == r && ("left" == o || "right" == o), p = (a ? v : m)[r], d = (a ? m : v)[r];
                    switch (o) {
                    case "top":
                        l = (s - p) / 2,
                        u = -p - 10 - ("arrow" == r ? 55 : 0);
                        break;
                    case "bottom":
                        l = (s - p) / 2,
                        u = c + 10 + ("arrow" == r ? 20 : 0);
                        break;
                    case "left":
                        l = ("arrow" == r ? 4 : -7) - p,
                        u = (c - d) / 2 - ("arrow" == r ? 6 : 0);
                        break;
                    case "right":
                        l = s + ("arrow" == r ? 55 : 5),
                        u = (c - d) / 2 - ("arrow" == r ? 6 : 0)
                    }
                    n = ' style="position: absolute; display: none; top: ' + u + "px; left: " + l + 'px;"'
                }
                var f = g("<" + r + " " + i + " " + n + "></" + r + ">")(e);
                t.append(f),
                "arrow" == r && f.addClass(r + "-" + o)
            }
            a = t[0];
            return a.show || (a.show = {}),
            a.show[r] = function() {
                f.css("display", "block")
            }
            ,
            f && (f.show = function() {
                return $(f).css("display", "block"),
                f
            }
            ,
            f.position = function() {
                var e;
                return 1 == arguments.length ? e = arguments[0] : 2 == arguments.length && (e = {
                    top: arguments[0] + "px",
                    left: arguments[1] + "px"
                }),
                $(f).css(e),
                f
            }
            ),
            f
        },
        size: function(e, t, n) {
            var r, o, i;
            void 0 !== n.size && (r = [],
            i = o = "",
            2 === (n = n.size.split(/\s*,\s*/)).length) && (r.width = n[0],
            r.height = n[1],
            r.width.match(/%/) || (o = "px"),
            r.height.match(/%/) || (i = "px"),
            t.css("width", r.width + o),
            t.css("height", r.height + i))
        },
        position: function(e, t, n) {
            var r;
            void 0 !== n.position && (r = [],
            2 === (n = n.position.split(/\s*,\s*/)).length) && (r.x = n[0],
            r.y = n[1],
            t.css("position", "absolute"),
            t.css("left", r.x + "px"),
            t.css("top", r.y + "px"))
        },
        textAlign: function(e, t, n) {
            void 0 !== n.textAlign && (n = n.textAlign,
            -1 !== ["left", "right", "center"].indexOf(n)) && (t.css("text-align", n),
            "center" !== n) && t.css("padding-" + n, "6px")
        },
        type: function(e, t, n) {
            void 0 !== t.type ? -1 !== n.indexOf(t.type) && e.addClass(t.type) : e.addClass("question-text")
        },
        setUserAnswer: function(e, t, n) {
            for (var r = o.userAnswers; r.length < t; )
                r.push(null);
            r[t] = n
        },
        getCompiledTag: function(e, t) {
            return g(t)(e)
        },
        createImageElement: function(e, t, n) {
            t = t || {};
            var r = ""
              , n = (n ? r = ' width="auto" height="auto" ' : angular.isDefined(t.width) || (r = ' width="100%" height="100%" '),
            '<div><img src="' + (e = 0 !== e.indexOf("images/") ? "images/" + e : e) + '"' + r + "></div>");
            return g(n)(parent).css(t)
        },
        appendImageElement: function(e, t, n, r) {
            e = this.createImageElement(e, n, r);
            return t.append(e),
            e
        },
        fontSize: function(e, t, n) {
            angular.isDefined(n.fontSize) && (isNaN(n.fontSize) || "" === n.fontSize ? n.fontSize.match(/px/) : $(">", t).andSelf().css("font-size", n.fontSize + "px"))
        },
        fontColor: function(e, t, n) {
            angular.isDefined(n.color) && t.css("color", n.color)
        }
    }
}
]),
angular.module("actApp.services").factory("composite", ["$log", "activity", function(b, y) {
    function A(e) {
        return null == e || 0 === e.length
    }
    function i(e, t) {
        t = function(e, t, n) {
            for (var r = void 0 !== n ? [n] : document.styleSheets, o = 0, i = r.length; o < i; o++) {
                var a = r[o];
                if (a.cssRules)
                    for (var s = 0, c = a.cssRules.length; s < c; s++) {
                        var u = a.cssRules[s];
                        if (u.selectorText && -1 !== u.selectorText.split(",").indexOf(t))
                            return u.style[e]
                    }
            }
            return ""
        }(e, "." + t);
        return "" !== t ? " " + e + ":" + t + "; " : ""
    }
    function E(e, t, n) {
        var r = "";
        return !function(e) {
            var t = !1;
            if (e)
                for (var n = e.split(/\s+/), r = 0; r < n.length; r++)
                    if (!_.contains(["label3p", "group3p-item"], n[r])) {
                        t = !0;
                        break
                    }
            return t
        }(e) ? (r = " color:" + n + "; ",
        angular.isDefined(t) && (r += t)) : (n = "",
        n += function(e) {
            for (var t = e.split(/\s+/), t = _.filter(t, function(e) {
                return "label3p" !== e && "group3p-item" !== e
            }), n = "", r = 0; r < t.length; r++)
                var o = t[r]
                  , n = (n += i("color", o)) + i("font-size", o);
            return n
        }(e),
        angular.isDefined(t) && (n += t),
        r = " " + n + '"'),
        r
    }
    return {
        resolve: function(e, t, n, r, o, i) {
            var a, s = "";
            "string" != typeof i && (i = " "),
            a = e instanceof Array ? e : e.split(/\s*,\s*/),
            angular.isUndefined(t) && (t = 1 < a.length ? "inline" : "block");
            for (var c, u = 0; u < a.length; u++) {
                var l, p = a[u];
                if (null != (l = p.match(/^['"](.*)['"]$/)))
                    h = l[1].replace(/\s/g, "&nbsp;");
                else {
                    for (var d = p.split(":"), p = d.shift(), f = null, g = 0; g < d.length; g++)
                        f = d[g];
                    if (null == (l = p.match(/^(.*?)\[(\d+)]\s*(?:\[(\d+)])?$/))) {
                        if (null === (h = y[p]))
                            return b.debug('composite.resolve() - "' + p + '" is not a known data item (1)'),
                            '"' + p + '" IS NOT A KNOWN DATA ITEM'
                    } else {
                        var m = l[1]
                          , v = ("answer" === m ? m = "originalAnswer" : "mappedAnswer" === m && (m = "answer"),
                        y[m]);
                        if (null == v)
                            return b.debug('composite.resolve() - "' + m + '" is not a known data item (2)'),
                            '"' + m + '" IS NOT A KNOWN DATA ITEM';
                        if ("[object Array]" != Object.prototype.toString.call(v))
                            return b.debug('composite.resolve() - model item "' + m + " is not an array!"),
                            'ITEM "' + m + '" IS NOT AN ARRAY';
                        var h, w = parseInt(l[2]), v = v.length;
                        if (!(w < v))
                            return b.debug("composite.resolve() - invalid index (" + w + ') is too large for model item "' + m + '" of length ' + v),
                            'BAD INDEX "' + w + '" INTO "' + m + '"';
                        h = y[m][w],
                        l[3] && (v = h.split(","),
                        h = (m = parseInt(l[3])) < v.length ? v[m] : "<b>" + p + " DOES NOT EXIST</b>")
                    }
                    w = f || n || "black";
                    h = h.match(/<math/) ? (l = w,
                    v = t,
                    h.replace(/display='.*?'/g, 'display="' + v + '"').replace("white", l).replace(/width=.*?\s*\/>/g, 'width="5px" />').replace(/fontstyle="italic" fontfamily="Times New Roman"/g, 'class="pronumeral"')) : '<span style="display:' + t + "; " + E(r, o, w) + '">' + h + "</span>"
                }
                m = h,
                p = i,
                l = void 0,
                s = A(c = s) ? A(m) ? "" : m : (c = A(c) ? "" : c.trim(),
                l = A(m) ? "" : m.trim(),
                m = A(m) ? "" : l.slice(0, 1),
                c + (-1 < [",", ";", ":", ".", "?", "!"].indexOf(m) ? "" : p) + l)
            }
            return s
        }
    }
}
]),
angular.module("actApp.services").factory("customTextInput", ["$compile", "activity", "answerChecker", "component", "composite", "$log", function(d, f, g, m, v, h) {
    return {
        resolveAttrAndSetStyle: function(e, t, n) {
            var r, o = function() {
                var e = {
                    chars: 7,
                    index: 1,
                    decimals: 5,
                    annunciator: "bottom",
                    pronumerals: "",
                    specialSymbols: "",
                    excludedChars: "",
                    workingInput: !1,
                    size: "100,50",
                    numericInput: !0,
                    annunciatorLabelOffset: 10,
                    annunciatorIconOffset: 15
                };
                return e
            }();
            n.$attr.size && (m.size(e, t, n),
            o.size = n.size.toString());
            n.$attr.position && m.position(e, t, n);
            for (r in n.$attr)
                if (n.$attr.hasOwnProperty(r)) {
                    var i, a, s, c, u, l, p = n.answer;
                    switch (r) {
                    case "chars":
                        0 < n.chars && (o.chars = n.chars);
                        break;
                    case "index":
                        0 < n.index && (o.index = n.index);
                        break;
                    case "decimals":
                        0 <= n.decimals && (o.decimals = n.decimals);
                        break;
                    case "numericInput":
                        "" !== n.numericInput && (o.numericInput = n.numericInput);
                        break;
                    case "pronumerals":
                        o.pronumerals = b(n, v, n.pronumerals),
                        (MOBILE || HTML_STUDENT_APP) && 9 < o.pronumerals.length && (o.pronumerals = function(e, t) {
                            var t = f.answers[t]
                              , n = (e = e.toString().replace(/,/g, "").split(""),
                            _.pull(e, t),
                            _.sample(e, e.length - 8));
                            return (e = _.difference(e, n)).push(t),
                            e = e.toString().replace(/,/g, "")
                        }(o.pronumerals, p));
                        break;
                    case "specialSymbols":
                        o.specialSymbols = b(n, v, n.specialSymbols);
                        break;
                    case "exclude":
                        o.excludedChars = n.exclude;
                        break;
                    case "textAlign":
                        o.textAlign = n.textAlign,
                        t.css("text-align", o.textAlign),
                        t.css("padding-" + o.textAlign, "10px");
                        break;
                    case "workingInput":
                        o.workingInput = !0,
                        t.removeClass("input3p"),
                        t.addClass("working-input3p");
                        break;
                    case "annunciatorIcon":
                        "" !== n.annunciatorIcon ? (a = t.attr("position"),
                        a = w(a = a.match(/(.*)?\{\{.*\}\}(.*)?/) ? n.position.toString() : a, o, n.annunciatorIcon, "icon"),
                        s = a.x,
                        a = a.y,
                        s = '<annunciator answer="' + n.answer + '" size="44,44" position="' + s + "," + a + '" show-icon></annunciator>',
                        (i = d(s)(e)).css("display", "none"),
                        $(t[0].parentNode).append(i),
                        e.$on(DISPLAY_ANNUNCIATORS, function() {
                            i.css("display", "block")
                        })) : h.error("`annunciator-icon` attribute of input3p requires a value of either: `left`, `right`, `top` or `bottom`");
                        break;
                    case "annunciator":
                        "none" !== n.annunciator ? (a = "center",
                        "left" === o.annunciator ? a = "right" : "right" === o.annunciator && (a = "left"),
                        s = void 0 === n.answerText ? f.originalAnswer[p] : v.resolve(n.answerText, "none", "#07C526"),
                        c = t.attr("position"),
                        c = w(c = c.match(/(.*)?\{\{.*\}\}(.*)?/) ? n.position.toString() : c, o, n.annunciator, "label"),
                        u = c.x,
                        c = c.y,
                        u = '<correct-answer-label answer-label answer="' + p + '" inputModel="' + n.ngModel + '" position="' + u + "," + c + '" size="' + n.size + '" text-align="' + a + ' ">' + s + "</correct-answer-label>",
                        (l = d(u)(e)).css("display", "none"),
                        $(t[0].parentNode).append(l),
                        e.$on(DISPLAY_ANNUNCIATORS, function(e, t) {
                            t || g.answerIsCorrect(n.answer) || (l.css("display", "block"),
                            l.children("*").css("display", "inline-block"))
                        })) : "" === n.annunciator && h.error("`annunciator` attribute of input3p requires a value of either: `left`, `right`, `top` or `bottom`")
                    }
                }
            t[0].maxLength = FLEX || ACTIVITY_TESTER || WINDOWS_STORE_APP ? parseInt(o.chars) + 1 : parseInt(o.chars);
            return o
        },
        validateInput: function(e, t, n) {
            if (void 0 === t)
                return "";
            var r = new RegExp("[" + n.excludedChars + "]","g")
              , o = t.replace(r, "")
              , i = "."
              , a = null;
            null !== f.numberSystem && (s = f.numberSystem,
            i = s.decimal,
            a = s.separator);
            var s, a = (s = "\\" + i) + (null === a ? "" : "\\" + a);
            FLEX || (u = n.specialSymbols,
            c = n.pronumerals.toLowerCase() + n.pronumerals.toUpperCase(),
            r = new RegExp("[^0-9" + c + a + u + "+-]","g"),
            o = o.replace(r, ""));
            var c = o.substr(n.chars);
            "-" !== c && o.length > n.chars && (o = o.substr(0, n.chars));
            var a = parseInt(n.decimals)
              , u = (s = new RegExp("\\" + i,"g"),
            o.match(s));
            null != u && (1 < u.length || 1 == u.length && a < 1) && (o = o.substring(0, o.length - 1));
            r = o.match(/\-/g);
            null != r && (1 < r.length ? 0 === (o = o.substring(0, o.length - 1)).indexOf("-") && (o = o.substring(1)) : o.indexOf("-") == o.length - 1 && (o = o.substring(0, o.length - 1)).length < n.chars && (o = "-".concat(o)));
            c = o.indexOf(i);
            -1 < c && o.substring(c + 1).length > a && (o = o.substring(0, c + a + 1));
            o != t && (e.$setViewValue(o),
            e.$render());
            return o
        },
        getCompiledTag: function(e, t, n, r) {
            return d(r)(e)
        },
        setTextFormat: function(e, t) {
            var n = new RegExp(/<[bB]>([\s\S]*?)<\/[bB]>/)
              , r = new RegExp(/<[iI]>([\s\S]*?)<\/[iI]>/);
            t.match(r) && e.css("font-style", "italic");
            r = t.match(/<font face="([^"]*)"\s?>/);
            r && e.css("font-family", r[1]);
            t.match(n) && e.css("font-weight", "bold");
            r = new RegExp(/([A-Z][^a-z],?)+/);
            t.replace(/<[^>]*>([\s\S]*?)/g, "").match(r) ? e.css("text-transform", "uppercase") : e.css("text-transform", "lowercase")
        }
    };
    function w(e, t, n, r) {
        var o = {}
          , i = (e = e.split(","),
        parseInt(e[0]))
          , e = parseInt(e[1])
          , a = t.size.split(",")
          , s = parseInt(a[0])
          , a = parseInt(a[1]);
        return "icon" === r ? (r = n.split(","),
        t.annunciatorIcon = r[0],
        r[1] && (t.annunciatorIconOffset = parseInt(r[1])),
        "top" == t.annunciatorIcon ? (i += (s - 50) / 2,
        e -= a + t.annunciatorIconOffset) : "bottom" == t.annunciatorIcon ? (i += (s - 50) / 2,
        e = e + a + t.annunciatorIconOffset) : "left" == t.annunciatorIcon ? (i = i - 50 - t.annunciatorIconOffset,
        e += (a - 50) / 2) : "right" == t.annunciatorIcon && (i = i + s + t.annunciatorIconOffset,
        e += (a - 50) / 2)) : (r = n.split(","),
        t.annunciator = r[0],
        r[1] && (t.annunciatorLabelOffset = parseInt(r[1])),
        "top" == t.annunciator ? e = e - a + t.annunciatorLabelOffset : "bottom" == t.annunciator ? e = e + a + t.annunciatorLabelOffset : "left" == t.annunciator ? (i = i - s - (16 + t.annunciatorLabelOffset),
        e += 10) : "right" == t.annunciator && (i = i + s + 10 + t.annunciatorLabelOffset,
        e += 10)),
        o.x = i,
        o.y = e,
        o
    }
    function b(e, t, n) {
        var r = "";
        return r = angular.isDefined(n) && "" !== n && (r = (r = t.resolve(n)).replace(/<\/?.*?>/g, ""),
        angular.isDefined(e.pronumerals)) ? r.replace(/,/g, "") : r
    }
}
]),
angular.module("actApp.services").factory("DataSource", ["$http", "$q", "$rootScope", "$log", function(e, o, r, i) {
    return {
        get: function(n) {
            var r = o.defer();
            return i.info("common/js/mathletics/services/dataSource.js - attempting to $http get " + n),
            e.get(n).success(function(e) {
                i.info("Success::actApp.dataSource: Request successfully loaded " + n),
                r.resolve(e)
            }).error(function(e, t) {
                t = "Error::actApp.dataSource: Request failed with status " + t + "  url = " + n;
                i.error(t),
                r.reject(t)
            }),
            r.promise
        },
        load: function(e, t) {
            t = t || !1;
            var n = o.defer();
            return i.info("common/js/mathletics/services/dataSource.js - attempting to $script load " + e),
            PRODUCTION || $script.urlArgs("bust=" + generateUUID()),
            $script(e, function() {
                t ? r.$apply(function() {
                    n.resolve()
                }) : n.resolve()
            }),
            n.promise
        }
    }
}
]),
angular.module("actApp.services").factory("developerAids", function() {
    return {
        constructDeveloperAidMarkup: function(e, t, n) {
            var r = "";
            {
                var o;
                r = FLEX || ACTIVITY_TESTER ? "<view-debug-trace></view-debug-trace>" : '<save-answers-as-test position="6,0"></save-answers-as-test>\n' + (o = FLEX || ACTIVITY_TESTER ? o : '<open-activity-in-browser position="525,0" ></open-activity-in-browser>') + '<view-activity-data position="400,0"></view-activity-data>\n'
            }
            void 0 !== t.selectedQuestion && !function(e, t) {
                var n = angular.element(document.body)
                  , t = t('<question-selector id="questionSelector" style="z-index: 1500; position: fixed; bottom:10px; left:0;"></question-selector>')(e);
                n.append(t)
            }(t, n);
            return e.replace(/^(\s*<div.*?>)/, "$1" + r)
        }
    }
}),
angular.module("actApp.services").factory("displayItems", function() {
    return {
        inputs: [],
        labels: [],
        images: []
    }
}),
angular.module("actApp.services").factory("dragAndDrop", ["$timeout", "activity", function(u, l) {
    var f = !0
      , c = []
      , g = []
      , t = [];
    function p(e) {
        for (var t = 0; t < g.length; t++) {
            var n = g[t];
            if (!e || n.group == e) {
                for (var r = !0, o = 0; o < c.length; o++)
                    if (n.collidesWith(c[o])) {
                        r = !1;
                        break
                    }
                if (r)
                    return n
            }
        }
        return null
    }
    function d(e, t) {
        var n = parseInt($(t).css("top"))
          , r = parseInt($(t).css("left"))
          , o = parseInt($(e).css("width"))
          , i = parseInt($(e).css("height"))
          , a = parseInt($(t).css("width"))
          , s = parseInt($(t).css("height"))
          , r = r + (a - o) / 2
          , c = {
            top: parseInt(n + (s - i) / 2) + "px",
            left: parseInt(r) + "px",
            zIndex: parseInt($(t).css("z-index")) + 1e3
        };
        l.resultsPage && e.hasClass("button3p") ? (a = 650 * t[0].attributes.answer.value,
        u(function() {
            e.animate(c, 650)
        }, a)) : e.css(c),
        ((e.zone = t).occupant = e).domElement.setAttribute("zone", t.id),
        t.domElement.setAttribute("occupant", e.id),
        m(e, t)
    }
    function m(e, t) {
        angular.isDefined(t.answer) ? angular.isDefined(t.value) ? l.userAnswers[t.answer] = t.value : angular.isDefined(e.value) && (l.userAnswers[t.answer] = e.value) : angular.isDefined(e.answer) && (angular.isDefined(t.value) ? l.userAnswers[e.answer] = t.value : angular.isDefined(e.value) && (l.userAnswers[e.answer] = e.value))
    }
    function v(e) {
        var t = parseInt($(e).css("top"));
        return {
            x: parseInt($(e).css("left")) + parseInt($(e).css("width")) / 2,
            y: t + parseInt($(e).css("height")) / 2
        }
    }
    function n(t) {
        return _.filter(g, function(e) {
            return e.group == t
        })
    }
    return {
        registerDragItem: function(e) {
            c.push(e)
        },
        registerDropZone: function(e) {
            g.push(e)
        },
        registerDropArea: function(e) {
            t.push(e)
        },
        matchingDropZone: function(e) {
            for (var t = [], n = 0; n < g.length; n++) {
                var r = g[n];
                angular.isDefined(e.group) && e.group != r.group && f || r.collidesWith(e) && t.push(r)
            }
            var o, i, a = v(e), s = null;
            if (0 < t.length) {
                for (var c = null, u = -1, l = 0; l < t.length; l++) {
                    var p = t[l]
                      , d = v(p)
                      , d = (i = void 0,
                    i = (o = a).x - d.x,
                    o = o.y - d.y,
                    i * i + o * o);
                    (u < 0 || d < u) && (u = d,
                    c = p)
                }
                s = c
            }
            return s
        },
        placeItem: d,
        drop: function(e, t, n) {
            if (angular.isDefined(n.itemDropped)) {
                n = n.itemDropped;
                "function" == typeof n && n(e, t)
            } else {
                for (var r = e, o = t, i = 0; i < c.length; i++) {
                    var a, s = c[i];
                    s != r && o.collidesWith(s) && (null === (a = p(s.group)) ? s.goHome() : d(s, a))
                }
                d(e, t)
            }
        },
        firstEmptyDropZone: p,
        allDragItems: function() {
            return c
        },
        dragItemsWithGroup: function(t) {
            return _.filter(c, function(e) {
                return e.group == t
            })
        },
        droppedItems: function() {
            return _.filter(c, function(e) {
                return null !== e.zone
            })
        },
        droppedItemsWithGroup: function(t) {
            return _.filter(c, function(e) {
                return e.group == t && null !== e.zone
            })
        },
        undroppedItems: function() {
            return _.filter(c, function(e) {
                return null === e.zone
            })
        },
        undroppedItemsWithGroup: function(t) {
            return _.filter(c, function(e) {
                return e.group == t && null === e.zone
            })
        },
        allDropZones: function() {
            return g
        },
        dropZonesWithGroup: n,
        occupiedDropZones: function() {
            return _.filter(g, function(e) {
                return e.occupied()
            })
        },
        occupiedDropZonesWithGroup: function(e) {
            return e = n(e),
            _.filter(e, function(e) {
                return e.occupied()
            })
        },
        disableGroupRestrictions: function() {
            f = !1
        },
        enableGroupRestrictions: function() {
            f = !0
        },
        updateAnswer: m
    }
}
]),
angular.module("actApp.services").factory("fractions", [function() {
    var n = ["", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty"]
      , r = [[], ["whole", "wholes"], ["half", "halves"], ["third", "thirds"], ["quarter", "quarters"], ["fifth", "fifths"], ["sixth", "sixths"], ["seventh", "sevenths"], ["eighth", "eighths"], ["ninth", "ninths"], ["tenth", "tenths"], ["eleventh", "elevenths"], ["twelfth", "twelfths"], ["thirteenth", "thirteenths"], ["fourteenth", "fourteenths"], ["fifteenth", "fifteenths"], ["sixteenth", "sixteenths"], ["seventeenth", "seventeenths"], ["eighteenth", "eighteenths"], ["nineteenth", "nineteenths"], ["twentieth", "twentieths"]];
    return {
        spokenAsFraction: function(e, t) {
            return e = Number(e),
            t = Number(t),
            n[e] + " " + r[t][1 == e ? 0 : 1]
        },
        spokenAsOver: function(e, t) {
            return e = Number(e),
            t = Number(t),
            n[e] + " over " + n[t]
        }
    }
}
]),
angular.module("actApp.services").factory("hooks", ["$log", "$timeout", "activity", "answerChecker", "displayItems", function(r, e, o, i) {
    function t(e) {
        n.$broadcast(DISPLAY_ANNUNCIATORS, e)
    }
    var n, a;
    return {
        generic: {
            okToSubmit: function() {
                var e = o.userAnswers
                  , t = o.answer
                  , n = !0;
                if (e.length === t.length)
                    for (var r = 0; r < e.length; r++)
                        null == e[r] && (n = !1);
                else
                    n = !1;
                return n
            },
            answersAreCorrect: function() {
                for (var e = o.userAnswers, t = !0, n = 0; n < e.length; n++) {
                    if (!i.answerIsCorrect(n)) {
                        r.log("activityMainController.generic.answersAreCorrect() - answer: " + n + " value: " + e[n] + " is INCORRECT"),
                        t = !1;
                        break
                    }
                    r.log("activityMainController.generic.AnswersAreCorrect() - answer: " + n + " value: " + e[n] + " is correct")
                }
                return r.log("\nactivityMainController.generic.answersAreCorrect() - the overall answer is", t ? "CORRECT" : "INCORRECT", "\n"),
                t
            },
            displayAnnunciators: t,
            submit: function(e) {
                n.submitOrNext = n.next,
                "undefined" == typeof submitToFlex || o.resultsPage || ACTIVITY_TESTER ? "undefined" == typeof submitAnswers || o.resultsPage || ACTIVITY_TESTER ? o.resultsPage || (n.submitOrNextText = "Next",
                n.disableSubmitButton = !1,
                n.setNextButtonClass()) : submitAnswers(o.userAnswers, e) : submitToFlex(o.userAnswers, e),
                o.answersOrResultsPage && n.$broadcast(SHOW_ANSWERS, e),
                o.resultsPage || n.$broadcast(SUBMISSION, e),
                t(e),
                PRODUCTION || (o.submittedAnswers = o.userAnswers,
                o.submittedResult = e ? "Correct" : "Incorrect",
                o.questionPage && (a.showSaveAnswersAsTest = !0))
            }
        },
        setMainScope: function(e) {
            n = e
        },
        setViewScope: function(e) {
            a = e
        }
    }
}
]),
angular.module("actApp.services").factory("keyboard", function() {
    var userAgentMatch = function(e) {
        e = e.toLowerCase();
        e = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
        return {
            browser: e[1] || "",
            version: e[2] || "0"
        }
    }, eventsListentedTo = {}, callbackFunction, keyMap = {}, currentBrowser = userAgentMatch(navigator.userAgent).browser || "browser", keypressHandler = (setCurrentBrowserKeymap(),
    function(e) {
        var t = String.fromCharCode(e.keyCode || e.which);
        callbackFunction(t, e)
    }
    ), keydownHandler = function(e) {
        var t = keyMap[currentBrowser][(e.keyCode || e.which) + ""];
        callbackFunction(t, e)
    }, keyupHandler = keydownHandler;
    return {
        ENTER_KEY: "\r",
        SPACE_KEY: " ",
        BACKSPACE_KEY: "\b",
        DELETE_KEY: "delete",
        UP_KEY: "up",
        DOWN_KEY: "down",
        LEFT_KEY: "left",
        RIGHT_KEY: "right",
        registerKeyEvent: function(targetElement, events, keyEventCallback) {
            var eventsList = events
              , delimiterRegex = new RegExp("(\\w+)[^,;:|%]","g")
              , keyboardEvents = ["keyup", "keydown", "keypress"];
            "string" == typeof events && events.match(delimiterRegex) && (eventsList = events.match(delimiterRegex)),
            angular.forEach(eventsList, function(event) {
                -1 !== keyboardEvents.indexOf(event) && $(targetElement).on(event, eval(event + "Handler"))
            }),
            eventsListentedTo[targetElement] = eventsList,
            callbackFunction = keyEventCallback
        },
        unregisterAllEvents: function(t) {
            angular.forEach(eventsListentedTo[t], function(e) {
                $(t).off(e)
            }),
            eventsListentedTo[t] = null
        },
        unregisterEvent: function(e, t) {
            -1 !== eventsListentedTo[e].indexOf(t) && $(e).off(t)
        }
    };
    function setCurrentBrowserKeymap() {
        keyMap[currentBrowser] = {
            8: "\b",
            9: "\t",
            13: "\r",
            16: "shift",
            17: "ctrl",
            18: "alt",
            19: "pause-break",
            20: "caps",
            27: "escape",
            144: "num-lock",
            145: "scroll-lock",
            44: "print",
            33: "page-up",
            34: "page-down",
            35: "end",
            36: "home",
            37: "left",
            38: "up",
            39: "right",
            40: "down",
            45: "insert",
            46: "delete",
            32: " ",
            48: "0",
            49: "1",
            50: "2",
            51: "3",
            52: "4",
            53: "5",
            54: "6",
            55: "7",
            56: "8",
            57: "9",
            65: "a",
            66: "b",
            67: "c",
            68: "d",
            69: "e",
            70: "f",
            71: "g",
            72: "h",
            73: "i",
            74: "j",
            75: "k",
            76: "l",
            77: "m",
            78: "n",
            79: "o",
            80: "p",
            81: "q",
            82: "r",
            83: "s",
            84: "t",
            85: "u",
            86: "v",
            87: "w",
            88: "x",
            89: "y",
            90: "z",
            96: "num0",
            97: "num1",
            98: "num2",
            99: "num3",
            100: "num4",
            101: "num5",
            102: "num6",
            103: "num7",
            104: "num8",
            105: "num9",
            106: "*",
            107: "+",
            109: "-",
            110: ".",
            111: "/",
            186: ";",
            187: "=",
            188: ",",
            189: "-",
            190: ".",
            191: "/",
            192: "`",
            219: "[",
            220: "\\",
            221: "]",
            222: "'",
            91: "left window key",
            92: "right window key",
            93: "select key",
            112: "f1",
            113: "f2",
            114: "f3",
            115: "f4",
            116: "f5",
            117: "f6",
            118: "f7",
            119: "f8",
            120: "f9",
            121: "f10",
            122: "f11",
            123: "f12"
        }
    }
}),
angular.module("actApp.services").factory("LoadAssets", ["DataSource", "$timeout", function(c, u) {
    return {
        load: function(n, e) {
            var t, r, o = {}, i = [];
            for (t in e)
                e.hasOwnProperty(t) && i.push({
                    name: t,
                    file: e[t]
                });
            function a() {
                (r = i.shift()).path = "asset/" + r.file,
                PRODUCTION || (r.path += "?bust=" + generateUUID()),
                c.get(r.path).then(s)
            }
            function s(e) {
                var t = r.name;
                o[t] = e,
                o._asset = o[t],
                0 < i.length ? u(a, 100) : n.$broadcast(ASSETS_LOADED, o)
            }
            a()
        }
    }
}
]),
angular.module("actApp.services").factory("LoadJsonXML", ["DataSource", function(e) {
    var s = [[/^actDifficultyLevel$/, "level"], [/^actQuestionType$/, "type"], [/^actAnswerHashEnglish$/, "answerHash"], [/^actAnswerLocal(\d+)$/, "answer"], [/^actQuestionText(\d+)$/, "question"], [/^actData(\d+)$/, "data"], [/^actVisualSpeech(\d+)$/, "speech"], [/^actVisualText(\d+)$/, "text"], [/^actFormat$/, "format"]];
    return {
        load: function(n, e) {
            xmlTransform = function(e) {
                return (new X2JS).xml_str2json(e).xml
            }
            ,
            renameKeys = function(e) {
                var t, n = {};
                for (t in e) {
                    var r, o, i = function(e) {
                        for (var t = 0; t < s.length; t++) {
                            var n = s[t]
                              , r = n[0];
                            if (null != (r = e.match(r)))
                                return [n[1], r[1]]
                        }
                        return null
                    }(t), a = e[t];
                    void 0 !== a && (null != i && (r = i[0],
                    null == (i = i[1]) ? n[r] = a : (null == n[r] && (n[r] = []),
                    "object" == typeof a && void 0 === a.__text ? 0 == a.__cnt ? n[r][i] = "" : (o = (new X2JS).json2xml_str(a),
                    n[r][i] = o.replace(/size\s*=\s*['"](.*?)["']/, "")) : n[r][i] = a.toString())),
                    n[t] = a.toString())
                }
                return n
            }
            ,
            setData = function(e) {
                var e = xmlTransform(e)
                  , t = e.Published;
                "string" != typeof (e = renameKeys(e.ActivityData)).type && (e.type = "1"),
                e.answer && (e.answer = e.answer.filter(function(e) {
                    return null === String(e).match("n/a")
                })),
                "string" == typeof activityConfig.answers || activityConfig.answers instanceof String ? e.userAnswers = null == activityConfig.answers ? [] : activityConfig.answers.split(",") : e.userAnswers = null == activityConfig.answers ? [] : activityConfig.answers,
                n.$broadcast(MODEL_LOADED, {
                    activityData: e,
                    published: t
                })
            }
            ,
            n.xmlUrl = e;
            var t = location.href.includes("qa.cdn");
            fetch((t ? "https://activitycontentscreen.qa.mathletics.com/question/" : "https://activitycontentscreen.mathletics.com/question/") + e, {
                headers: {
                    accept: "*/*"
                },
                method: "GET"
            }).then(e => e.text()).then(e => {
                setData(biffle(e))
            }
            )
        }
    }
}
]);
const sdfs = "nihonium";
function biffle(e) {
    return fred(baffle(e).replace(sdfs, ""))
}
function baffle(e, t=13) {
    return "string" != typeof e ? "" : (t = rotateBy(t),
    e.split("").map(convertToCharCode).map(t).map(convertToChar).join(""))
}
function convertToCharCode(e) {
    return e.charCodeAt(0)
}
function convertToChar(e) {
    return String.fromCharCode(e)
}
function rotateBy(t) {
    return function(e) {
        return 65 <= e && e <= 90 ? e + t <= 90 ? e + t : e + t - 90 + 64 : 97 <= e && e <= 122 ? e + t <= 122 ? e + t : e + t - 122 + 96 : e
    }
}
function fred(e) {
    const n = atob(e);
    return (new TextDecoder).decode(Uint8Array.from({
        length: n.length
    }, (e, t) => n.charCodeAt(t)))
}
angular.module("actApp.services").factory("numberFormat", [function() {
    var a = {};
    function s(e, t) {
        var n, t = void 0 === t ? (n = "\\.",
        "[ ,]") : (n = t.decimal,
        t.separator);
        return decimalPattern = new RegExp(n,"g"),
        separatorPattern = new RegExp(t,"g"),
        e.replace(separatorPattern, "").replace(decimalPattern, ".")
    }
    function c(e, t) {
        var n = {}
          , t = "^\\s*(-?)([" + t.separator + "\\d]+)(?:\\" + t.decimal + "(\\d*))?\\s*$"
          , t = new RegExp(t);
        return n = null !== (e = e.match(t)) ? {
            minus: e[1] || "",
            integer: (e[2] || "0").replace(/^0*/, ""),
            decimal: (e[3] || "0").replace(/0*$/, "")
        } : n
    }
    function n(e, t) {
        if (null !== e.match(t)) {
            for (var n = e.split(t), r = 0; r < n.length; r++) {
                var o = n[r];
                if (!i(o) && "" !== o)
                    return
            }
            return 1
        }
    }
    function i(e) {
        return null !== e.match(/^\s*-?\d+(\.\d*)?\s*$/)
    }
    function u(e, t) {
        return (null !== e.match(/^\s*[\d ,]+\s*$/) ? o : null !== e.match(/^\s*[\d ,]*\.\d*$/) ? l : function(e, t) {
            var n, r, o, i = "";
            for (; null != e && "" !== e; )
                null !== (n = e.match(/^([^\d]+)(.*)$/)) ? (r = n[1],
                o = n[2],
                i += r,
                e = o) : null !== (n = e.match(/^([\d ,]*(?:\.\d+)?)?(.*)$/)) && (r = n[1],
                o = n[2],
                !function(e) {
                    var t, n = !0;
                    null !== (t = e.match(/^(.*)\.(\d+)$/)) && (e = t[1]);
                    for (; n && "" !== e; )
                        null !== (t = e.match(/^(.*)(\d{3}|[ ,])$/)) ? e = t[1] : null === e.match(/^\d{1,3}$/) ? n = !1 : e = "";
                    return n
                }(r) ? i += function(e, t) {
                    var n, r, o, i, a = "";
                    for (; "" !== e; ) {
                        if (null !== (n = e.match(/^(\d*(?:\.\d+)?)([ ,]*)(.*)$/)))
                            r = n[1],
                            o = n[2],
                            i = n[3],
                            a += l(r, t),
                            void 0 !== o && (a += o);
                        else {
                            if (null === (n = e.match(/^([^\d]+)(.*)/)))
                                break;
                            r = n[1],
                            i = n[2],
                            a += r
                        }
                        e = i
                    }
                    return a
                }(r, t) : i += u(r, t),
                e = o === e ? (i += e,
                null) : o);
            return i
        }
        )(e, t)
    }
    function o(e, t) {
        var n = number.replace(/(?=(\d{3})+(?!\d))/g, t).replace()
          , t = new RegExp("^" + t);
        return n.replace(t, "")
    }
    function l(e, t) {
        var n, r = "";
        return null != (e = e.match(/^([\d ,]+)(\.(\d*))$/)) && (e[1],
        n = e[2],
        r += o(0, t.separator),
        void 0 !== n) && (n = e[3],
        r += t.decimal + n),
        r
    }
    return a.isMultiValued = function(e) {
        var t = !1;
        return n(e, /\s*;\s*/) ? t = !0 : n(e, /\s*,\s*/) && (t = !function(e) {
            var t = !1
              , e = e.split(/\s*,\s*/);
            1 < e.length && function(e) {
                for (var t = 0; t < e.length; t++)
                    if (!i(e[t]))
                        return;
                return 1
            }(e) && function(e) {
                if (null === e[0].match(/^\s*\d{1,3}\s*$/))
                    return;
                for (var t = e.length - 1, n = t; 0 < n; n--) {
                    var r = e[n];
                    if (null === (r = r.match(/^\s*\d{3}(\.\d+)?\s*$/)))
                        return;
                    if (void 0 !== r[1] && n < t)
                        return
                }
                return 1
            }(e) && (t = !0);
            return t
        }(e)),
        t
    }
    ,
    a.convertToNumberSystem = function(e, t, n) {
        if (n = void 0 === n ? a.isMultiValued(e) : n) {
            for (var r = e.split(/\s*[,;]\s*/), o = [], i = 0; i < r.length; i++)
                o.push(u(r[i], t));
            return o.join(",")
        }
        return u(e, t)
    }
    ,
    a.numberMatchesCorrectValue = function(e, t, n, r) {
        var o, i;
        return t ? i = n === r : (t = s(n, e),
        o = s(r, e),
        i = Number(t) == Number(o),
        void 0 !== e && (i = i && function(e, t, n) {
            e = c(e, n),
            t = c(t, n);
            return function(e, t) {
                for (var n = ["minus", "integer", "decimal"], r = 0; r < n.length; r++) {
                    var o = n[r];
                    if (e[o] != t[o])
                        return !1
                }
                return !0
            }(e, t)
        }(n, r, e))),
        i
    }
    ,
    a
}
]),
angular.module("actApp.services").factory("profiler", [function() {
    var s = {}
      , n = {};
    return n.start = function(i) {
        var e = (new Date).getTime();
        e = {
            context: i,
            start: e,
            last: e,
            laps: [],
            lap: function(e) {
                var t = s[i]
                  , n = (new Date).getTime()
                  , r = n - t.start
                  , o = n - t.last
                  , e = {
                    message: e,
                    totalTime: r,
                    lapTime: o,
                    totalHMS: a(r),
                    lapHMS: a(o)
                };
                return t.last = n,
                t.laps.push(e),
                e
            }
        };
        return s[i] = e;
        function a(e) {
            for (var t = (e = (e - (r = e % 1e3)) / 1e3) % 60, n = (e = (e - t) / 60) % 60, e = (e - n) / 60, r = "" + r; r.length < 3; )
                r = "0" + r;
            return e + "h " + n + "m " + t + "." + r + "s"
        }
    }
    ,
    n.timer = function(e) {
        var t = s[e];
        return t = void 0 === t ? n.start(e) : t
    }
    ,
    n
}
]),
angular.module("actApp.services").factory("questionPartitions", ["$log", "activity", function(e, r) {
    function o() {
        null == c && u();
        for (var e = {}, t = {}, n = 0; n < c.length; n++) {
            for (var r = c[n], o = 0; o < r.levels.length; o++)
                e[i = r.levels[o]] = !0;
            for (o = 0; o < r.types.length; o++)
                "*" != (s = r.types[o]) && (t[s] = !0)
        }
        var i, a = !0;
        for (i in e)
            if (e.hasOwnProperty(i))
                for (var s in t)
                    t.hasOwnProperty(s) && "*" != s && l(i, s).collision && (a = !1);
        return a
    }
    var s = null
      , c = null;
    function u() {
        var e = !0;
        c = [];
        for (var t = 0; t < s.length; t++) {
            var n, r, o, i = s[t], a = i.pattern;
            "activity" == a ? c.push({
                pattern: "activity",
                levels: [1, 2, 3],
                types: ["*"],
                value: "activity"
            }) : (null != (r = (n = (o = a.split(/-/))[0]).match(/^level\[([123,]+)\]/)) ? n = r[1].split(",") : null != (r = n.match(/^level([123])$/)) ? n = [r[1]] : e = !1,
            e && (o = (o = o[1]) ? null != (r = o.match(/^type\[([\d,]+)\]$/)) ? r[1].split(",") : null != (r = o.match(/^type(\d+)$/)) ? [r[1]] : ["*"] : ["*"],
            c.push({
                pattern: a,
                levels: n,
                types: o,
                value: i.value
            })))
        }
    }
    function l(e, t) {
        for (var n = null, r = !1, o = 0; o < c.length; o++) {
            var i;
            (i = c[o]).pattern;
            !function(e, t, n) {
                for (var r = e.levels, o = e.types, i = 0; i < r.length; i++)
                    if (parseInt(r[i]) == parseInt(t))
                        for (var a = 0; a < o.length; a++)
                            if ("*" == o[a] || parseInt(o[a]) == parseInt(n))
                                return 1;
                return
            }(i, e, t) || (null == n ? n = i : "*" == i.types[0] ? "*" == n.types[0] && (r = !0) : "*" == n.types[0] ? n = i : r = !0)
        }
        return {
            partition: i = n,
            collision: r
        }
    }
    return {
        initialise: function() {
            s = [],
            c = null
        },
        add: function(e, t) {
            s.push({
                pattern: e,
                value: t
            })
        },
        checkConsistency: o,
        matchQuestion: function() {
            var e = r.level
              , t = r.type
              , n = (u(),
            null);
            return (n = o() ? l(e, t) : n) ? n.partition.value : null
        }
    }
}
]),
angular.module("actApp.services").factory("ViewRoute", ["$http", "$timeout", "$log", "activity", "questionPartitions", "developerAids", "profiler", function(s, c, u, e, l, p, d) {
    return {
        resolve: function(o, i) {
            var e, t = o.routes, a = d.start("ViewRoute");
            function n(e) {
                var t, n = "views/" + e + ".html", r = angular.element(document.querySelector("#activityView"));
                u.debug("ViewRoute.compileView() - attempting to load " + n),
                (t = o).$on(MATHJAX_COMPLETE, function() {
                    t.activityViewStyle = {
                        opacity: 1
                    },
                    t.$apply(),
                    u.debug("viewRoute.$on(MATHJAX_COMPLETE) - time to load & render MathML was " + a.lap().totalHMS)
                }),
                s.get(n).success(function(e) {
                    o.activityViewStyle = {
                        opacity: 0
                    },
                    u.info("Success::actApp.ViewRoute: Request successfully loaded " + n),
                    DEVELOPER_AIDS && (e = p.constructDeveloperAidMarkup(e, o, i)),
                    r.replaceWith(i('<div id="activityView" ng-style="activityViewStyle">' + e + "</div>")(o)),
                    c(function() {
                        o.$broadcast(INIT_VIEW)
                    }, 0, !0)
                }).error(function(e, t) {
                    DEBUG && u.error("Error::actApp.ViewRoute: Request failed with status " + t + "  templateUrl = " + n)
                })
            }
            if (0 === t.length || 1 == t.length && "activity" == t[0])
                n("activity");
            else {
                l.initialise();
                for (var r = 0; r < t.length; r++)
                    e = t[r],
                    l.add(e, e);
                l.checkConsistency() && (e = l.matchQuestion()) && n(e)
            }
        }
    }
}
]);

console.log('COMMON BUILD_HASH', '3dda97beb72e32fe949277b24362ca3d224f3db1  -')
